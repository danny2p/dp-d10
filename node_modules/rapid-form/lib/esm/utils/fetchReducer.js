// TODO: refactor in one way
const fetchReducer = (state, action) => {
    if (action.type === 'change') {
        if (action.name && state.errors?.hasOwnProperty(action.name)) {
            delete state.errors[action.name];
        }
        state = {
            ...state,
            data: {
                ...state.data,
                ...action.data,
            },
            errors: {
                ...state.errors,
                ...action.errors,
            },
        };
    }
    if (action.type === 'setRef') {
        state = {
            ...state,
            refs: {
                ...state.refs,
                ...action.data,
            },
        };
    }
    if (action.type === 'error') {
        state = {
            ...state,
            data: {
                ...state.data,
                ...action.data,
            },
            errors: {
                ...state.errors,
                ...action.errors,
            },
        };
    }
    if (action.type === 'reset') {
        state = {
            ...state,
            data: {},
            errors: {},
        };
    }
    return state;
};
export default fetchReducer;
