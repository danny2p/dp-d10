import { ApiResource } from '../resource';
class BuyXPayYPromotions extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: BuyXPayYPromotions.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: BuyXPayYPromotions.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: BuyXPayYPromotions.TYPE } : id, options);
    }
    async market(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'markets' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/market`, params, options);
    }
    async order_amount_promotion_rule(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'order_amount_promotion_rules' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/order_amount_promotion_rule`, params, options);
    }
    async sku_list_promotion_rule(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'sku_list_promotion_rules' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/sku_list_promotion_rule`, params, options);
    }
    async coupon_codes_promotion_rule(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'coupon_codes_promotion_rules' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/coupon_codes_promotion_rule`, params, options);
    }
    async coupons(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'coupons' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/coupons`, params, options);
    }
    async sku_list(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'sku_lists' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/sku_list`, params, options);
    }
    async attachments(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'attachments' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/attachments`, params, options);
    }
    async events(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'events' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/events`, params, options);
    }
    async tags(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'tags' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/tags`, params, options);
    }
    async versions(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'versions' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/versions`, params, options);
    }
    async skus(buyXPayYPromotionId, params, options) {
        const _buyXPayYPromotionId = buyXPayYPromotionId.id || buyXPayYPromotionId;
        return this.resources.fetch({ type: 'skus' }, `buy_x_pay_y_promotions/${_buyXPayYPromotionId}/skus`, params, options);
    }
    async _disable(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: BuyXPayYPromotions.TYPE, _disable: true }, params, options);
    }
    async _enable(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: BuyXPayYPromotions.TYPE, _enable: true }, params, options);
    }
    isBuyXPayYPromotion(resource) {
        return resource.type && (resource.type === BuyXPayYPromotions.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: BuyXPayYPromotions.TYPE } : { id: id.id, type: BuyXPayYPromotions.TYPE };
    }
    type() {
        return BuyXPayYPromotions.TYPE;
    }
}
BuyXPayYPromotions.TYPE = 'buy_x_pay_y_promotions';
export default BuyXPayYPromotions;
