import { ApiResource } from '../resource';
class SkuListPromotionRules extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: SkuListPromotionRules.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: SkuListPromotionRules.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: SkuListPromotionRules.TYPE } : id, options);
    }
    async versions(skuListPromotionRuleId, params, options) {
        const _skuListPromotionRuleId = skuListPromotionRuleId.id || skuListPromotionRuleId;
        return this.resources.fetch({ type: 'versions' }, `sku_list_promotion_rules/${_skuListPromotionRuleId}/versions`, params, options);
    }
    async sku_list(skuListPromotionRuleId, params, options) {
        const _skuListPromotionRuleId = skuListPromotionRuleId.id || skuListPromotionRuleId;
        return this.resources.fetch({ type: 'sku_lists' }, `sku_list_promotion_rules/${_skuListPromotionRuleId}/sku_list`, params, options);
    }
    async skus(skuListPromotionRuleId, params, options) {
        const _skuListPromotionRuleId = skuListPromotionRuleId.id || skuListPromotionRuleId;
        return this.resources.fetch({ type: 'skus' }, `sku_list_promotion_rules/${_skuListPromotionRuleId}/skus`, params, options);
    }
    isSkuListPromotionRule(resource) {
        return resource.type && (resource.type === SkuListPromotionRules.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: SkuListPromotionRules.TYPE } : { id: id.id, type: SkuListPromotionRules.TYPE };
    }
    type() {
        return SkuListPromotionRules.TYPE;
    }
}
SkuListPromotionRules.TYPE = 'sku_list_promotion_rules';
export default SkuListPromotionRules;
