import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Price, PriceType } from './prices';
import type { Attachment } from './attachments';
import type { Version } from './versions';
import type { Event } from './events';
type PriceFrequencyTierType = 'price_frequency_tiers';
type PriceFrequencyTierRel = ResourceRel & {
    type: PriceFrequencyTierType;
};
type PriceRel = ResourceRel & {
    type: PriceType;
};
interface PriceFrequencyTier extends Resource {
    readonly type: PriceFrequencyTierType;
    name: string;
    up_to?: number | null;
    price_amount_cents: number;
    price_amount_float?: number | null;
    formatted_price_amount?: string | null;
    price?: Price | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
    events?: Event[] | null;
}
interface PriceFrequencyTierCreate extends ResourceCreate {
    name: string;
    up_to?: number | null;
    price_amount_cents: number;
    price: PriceRel;
}
interface PriceFrequencyTierUpdate extends ResourceUpdate {
    name?: string | null;
    up_to?: number | null;
    price_amount_cents?: number | null;
    price?: PriceRel | null;
}
declare class PriceFrequencyTiers extends ApiResource<PriceFrequencyTier> {
    static readonly TYPE: PriceFrequencyTierType;
    create(resource: PriceFrequencyTierCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceFrequencyTier>;
    update(resource: PriceFrequencyTierUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceFrequencyTier>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    price(priceFrequencyTierId: string | PriceFrequencyTier, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Price>;
    attachments(priceFrequencyTierId: string | PriceFrequencyTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(priceFrequencyTierId: string | PriceFrequencyTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    events(priceFrequencyTierId: string | PriceFrequencyTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    isPriceFrequencyTier(resource: any): resource is PriceFrequencyTier;
    relationship(id: string | ResourceId | null): PriceFrequencyTierRel;
    type(): PriceFrequencyTierType;
}
export default PriceFrequencyTiers;
export type { PriceFrequencyTier, PriceFrequencyTierCreate, PriceFrequencyTierUpdate, PriceFrequencyTierType };
