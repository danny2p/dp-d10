import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { PaymentMethod } from './payment_methods';
import type { Version } from './versions';
import type { StripePayment } from './stripe_payments';
type StripeGatewayType = 'stripe_gateways';
type StripeGatewayRel = ResourceRel & {
    type: StripeGatewayType;
};
interface StripeGateway extends Resource {
    readonly type: StripeGatewayType;
    name: string;
    auto_payments?: boolean | null;
    webhook_endpoint_id?: string | null;
    webhook_endpoint_secret?: string | null;
    webhook_endpoint_url?: string | null;
    payment_methods?: PaymentMethod[] | null;
    versions?: Version[] | null;
    stripe_payments?: StripePayment[] | null;
}
interface StripeGatewayCreate extends ResourceCreate {
    name: string;
    login: string;
    publishable_key?: string | null;
    auto_payments?: boolean | null;
}
interface StripeGatewayUpdate extends ResourceUpdate {
    name?: string | null;
    auto_payments?: boolean | null;
}
declare class StripeGateways extends ApiResource<StripeGateway> {
    static readonly TYPE: StripeGatewayType;
    create(resource: StripeGatewayCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StripeGateway>;
    update(resource: StripeGatewayUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StripeGateway>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    payment_methods(stripeGatewayId: string | StripeGateway, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<PaymentMethod>>;
    versions(stripeGatewayId: string | StripeGateway, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    stripe_payments(stripeGatewayId: string | StripeGateway, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StripePayment>>;
    isStripeGateway(resource: any): resource is StripeGateway;
    relationship(id: string | ResourceId | null): StripeGatewayRel;
    type(): StripeGatewayType;
}
export default StripeGateways;
export type { StripeGateway, StripeGatewayCreate, StripeGatewayUpdate, StripeGatewayType };
