import { ApiResource } from '../resource';
class AdyenPayments extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: AdyenPayments.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: AdyenPayments.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: AdyenPayments.TYPE } : id, options);
    }
    async order(adyenPaymentId, params, options) {
        const _adyenPaymentId = adyenPaymentId.id || adyenPaymentId;
        return this.resources.fetch({ type: 'orders' }, `adyen_payments/${_adyenPaymentId}/order`, params, options);
    }
    async payment_gateway(adyenPaymentId, params, options) {
        const _adyenPaymentId = adyenPaymentId.id || adyenPaymentId;
        return this.resources.fetch({ type: 'payment_gateways' }, `adyen_payments/${_adyenPaymentId}/payment_gateway`, params, options);
    }
    async versions(adyenPaymentId, params, options) {
        const _adyenPaymentId = adyenPaymentId.id || adyenPaymentId;
        return this.resources.fetch({ type: 'versions' }, `adyen_payments/${_adyenPaymentId}/versions`, params, options);
    }
    async _details(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: AdyenPayments.TYPE, _details: true }, params, options);
    }
    isAdyenPayment(resource) {
        return resource.type && (resource.type === AdyenPayments.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: AdyenPayments.TYPE } : { id: id.id, type: AdyenPayments.TYPE };
    }
    type() {
        return AdyenPayments.TYPE;
    }
}
AdyenPayments.TYPE = 'adyen_payments';
export default AdyenPayments;
