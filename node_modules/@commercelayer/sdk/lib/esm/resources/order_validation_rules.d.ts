import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type OrderValidationRuleType = 'order_validation_rules';
type OrderValidationRuleRel = ResourceRel & {
    type: OrderValidationRuleType;
};
interface OrderValidationRule extends Resource {
    readonly type: OrderValidationRuleType;
    market?: Market | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
declare class OrderValidationRules extends ApiResource<OrderValidationRule> {
    static readonly TYPE: OrderValidationRuleType;
    market(orderValidationRuleId: string | OrderValidationRule, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    attachments(orderValidationRuleId: string | OrderValidationRule, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(orderValidationRuleId: string | OrderValidationRule, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isOrderValidationRule(resource: any): resource is OrderValidationRule;
    relationship(id: string | ResourceId | null): OrderValidationRuleRel;
    type(): OrderValidationRuleType;
}
export default OrderValidationRules;
export type { OrderValidationRule, OrderValidationRuleType };
