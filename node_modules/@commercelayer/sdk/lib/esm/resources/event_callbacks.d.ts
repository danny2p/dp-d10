import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel } from '../resource';
import type { QueryParamsRetrieve } from '../query';
import type { Webhook } from './webhooks';
type EventCallbackType = 'event_callbacks';
type EventCallbackRel = ResourceRel & {
    type: EventCallbackType;
};
interface EventCallback extends Resource {
    readonly type: EventCallbackType;
    callback_url: string;
    payload?: Record<string, any> | null;
    response_code?: string | null;
    response_message?: string | null;
    webhook?: Webhook | null;
}
declare class EventCallbacks extends ApiResource<EventCallback> {
    static readonly TYPE: EventCallbackType;
    webhook(eventCallbackId: string | EventCallback, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Webhook>;
    isEventCallback(resource: any): resource is EventCallback;
    relationship(id: string | ResourceId | null): EventCallbackRel;
    type(): EventCallbackType;
}
export default EventCallbacks;
export type { EventCallback, EventCallbackType };
