import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Geocoder, GeocoderType } from './geocoders';
import type { Event } from './events';
import type { Tag, TagType } from './tags';
import type { Version } from './versions';
type AddressType = 'addresses';
type AddressRel = ResourceRel & {
    type: AddressType;
};
type GeocoderRel = ResourceRel & {
    type: GeocoderType;
};
type TagRel = ResourceRel & {
    type: TagType;
};
interface Address extends Resource {
    readonly type: AddressType;
    business?: boolean | null;
    first_name?: string | null;
    last_name?: string | null;
    company?: string | null;
    full_name?: string | null;
    line_1: string;
    line_2?: string | null;
    city: string;
    zip_code?: string | null;
    state_code: string;
    country_code: string;
    phone: string;
    full_address?: string | null;
    name?: string | null;
    email?: string | null;
    notes?: string | null;
    lat?: number | null;
    lng?: number | null;
    is_localized?: boolean | null;
    is_geocoded?: boolean | null;
    provider_name?: string | null;
    map_url?: string | null;
    static_map_url?: string | null;
    billing_info?: string | null;
    geocoder?: Geocoder | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
    versions?: Version[] | null;
}
interface AddressCreate extends ResourceCreate {
    business?: boolean | null;
    first_name?: string | null;
    last_name?: string | null;
    company?: string | null;
    line_1: string;
    line_2?: string | null;
    city: string;
    zip_code?: string | null;
    state_code: string;
    country_code: string;
    phone: string;
    email?: string | null;
    notes?: string | null;
    lat?: number | null;
    lng?: number | null;
    billing_info?: string | null;
    geocoder?: GeocoderRel | null;
    tags?: TagRel[] | null;
}
interface AddressUpdate extends ResourceUpdate {
    business?: boolean | null;
    first_name?: string | null;
    last_name?: string | null;
    company?: string | null;
    line_1?: string | null;
    line_2?: string | null;
    city?: string | null;
    zip_code?: string | null;
    state_code?: string | null;
    country_code?: string | null;
    phone?: string | null;
    email?: string | null;
    notes?: string | null;
    lat?: number | null;
    lng?: number | null;
    billing_info?: string | null;
    geocoder?: GeocoderRel | null;
    tags?: TagRel[] | null;
}
declare class Addresses extends ApiResource<Address> {
    static readonly TYPE: AddressType;
    create(resource: AddressCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Address>;
    update(resource: AddressUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Address>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    geocoder(addressId: string | Address, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Geocoder>;
    events(addressId: string | Address, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(addressId: string | Address, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    versions(addressId: string | Address, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isAddress(resource: any): resource is Address;
    relationship(id: string | ResourceId | null): AddressRel;
    type(): AddressType;
}
export default Addresses;
export type { Address, AddressCreate, AddressUpdate, AddressType };
