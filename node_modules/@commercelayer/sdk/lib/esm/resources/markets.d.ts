import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Merchant, MerchantType } from './merchants';
import type { PriceList, PriceListType } from './price_lists';
import type { InventoryModel, InventoryModelType } from './inventory_models';
import type { SubscriptionModel, SubscriptionModelType } from './subscription_models';
import type { TaxCalculator, TaxCalculatorType } from './tax_calculators';
import type { CustomerGroup, CustomerGroupType } from './customer_groups';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type MarketType = 'markets';
type MarketRel = ResourceRel & {
    type: MarketType;
};
type MerchantRel = ResourceRel & {
    type: MerchantType;
};
type PriceListRel = ResourceRel & {
    type: PriceListType;
};
type InventoryModelRel = ResourceRel & {
    type: InventoryModelType;
};
type SubscriptionModelRel = ResourceRel & {
    type: SubscriptionModelType;
};
type TaxCalculatorRel = ResourceRel & {
    type: TaxCalculatorType;
};
type CustomerGroupRel = ResourceRel & {
    type: CustomerGroupType;
};
interface Market extends Resource {
    readonly type: MarketType;
    number?: number | null;
    name: string;
    facebook_pixel_id?: string | null;
    checkout_url?: string | null;
    external_prices_url?: string | null;
    external_order_validation_url?: string | null;
    shared_secret: string;
    private?: boolean | null;
    disabled_at?: string | null;
    merchant?: Merchant | null;
    price_list?: PriceList | null;
    inventory_model?: InventoryModel | null;
    subscription_model?: SubscriptionModel | null;
    tax_calculator?: TaxCalculator | null;
    customer_group?: CustomerGroup | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface MarketCreate extends ResourceCreate {
    name: string;
    facebook_pixel_id?: string | null;
    checkout_url?: string | null;
    external_prices_url?: string | null;
    external_order_validation_url?: string | null;
    merchant: MerchantRel;
    price_list: PriceListRel;
    inventory_model: InventoryModelRel;
    subscription_model?: SubscriptionModelRel | null;
    tax_calculator?: TaxCalculatorRel | null;
    customer_group?: CustomerGroupRel | null;
}
interface MarketUpdate extends ResourceUpdate {
    name?: string | null;
    facebook_pixel_id?: string | null;
    checkout_url?: string | null;
    external_prices_url?: string | null;
    external_order_validation_url?: string | null;
    _disable?: boolean | null;
    _enable?: boolean | null;
    merchant?: MerchantRel | null;
    price_list?: PriceListRel | null;
    inventory_model?: InventoryModelRel | null;
    subscription_model?: SubscriptionModelRel | null;
    tax_calculator?: TaxCalculatorRel | null;
    customer_group?: CustomerGroupRel | null;
}
declare class Markets extends ApiResource<Market> {
    static readonly TYPE: MarketType;
    create(resource: MarketCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    update(resource: MarketUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    merchant(marketId: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Merchant>;
    price_list(marketId: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceList>;
    inventory_model(marketId: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryModel>;
    subscription_model(marketId: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SubscriptionModel>;
    tax_calculator(marketId: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<TaxCalculator>;
    customer_group(marketId: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<CustomerGroup>;
    attachments(marketId: string | Market, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(marketId: string | Market, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _disable(id: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    _enable(id: string | Market, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    isMarket(resource: any): resource is Market;
    relationship(id: string | ResourceId | null): MarketRel;
    type(): MarketType;
}
export default Markets;
export type { Market, MarketCreate, MarketUpdate, MarketType };
