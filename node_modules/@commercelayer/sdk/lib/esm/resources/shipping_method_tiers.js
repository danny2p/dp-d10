import { ApiResource } from '../resource';
class ShippingMethodTiers extends ApiResource {
    async shipping_method(shippingMethodTierId, params, options) {
        const _shippingMethodTierId = shippingMethodTierId.id || shippingMethodTierId;
        return this.resources.fetch({ type: 'shipping_methods' }, `shipping_method_tiers/${_shippingMethodTierId}/shipping_method`, params, options);
    }
    async attachments(shippingMethodTierId, params, options) {
        const _shippingMethodTierId = shippingMethodTierId.id || shippingMethodTierId;
        return this.resources.fetch({ type: 'attachments' }, `shipping_method_tiers/${_shippingMethodTierId}/attachments`, params, options);
    }
    async versions(shippingMethodTierId, params, options) {
        const _shippingMethodTierId = shippingMethodTierId.id || shippingMethodTierId;
        return this.resources.fetch({ type: 'versions' }, `shipping_method_tiers/${_shippingMethodTierId}/versions`, params, options);
    }
    isShippingMethodTier(resource) {
        return resource.type && (resource.type === ShippingMethodTiers.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: ShippingMethodTiers.TYPE } : { id: id.id, type: ShippingMethodTiers.TYPE };
    }
    type() {
        return ShippingMethodTiers.TYPE;
    }
}
ShippingMethodTiers.TYPE = 'shipping_method_tiers';
export default ShippingMethodTiers;
