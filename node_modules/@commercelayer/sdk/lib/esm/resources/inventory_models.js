import { ApiResource } from '../resource';
class InventoryModels extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: InventoryModels.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: InventoryModels.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: InventoryModels.TYPE } : id, options);
    }
    async inventory_stock_locations(inventoryModelId, params, options) {
        const _inventoryModelId = inventoryModelId.id || inventoryModelId;
        return this.resources.fetch({ type: 'inventory_stock_locations' }, `inventory_models/${_inventoryModelId}/inventory_stock_locations`, params, options);
    }
    async inventory_return_locations(inventoryModelId, params, options) {
        const _inventoryModelId = inventoryModelId.id || inventoryModelId;
        return this.resources.fetch({ type: 'inventory_return_locations' }, `inventory_models/${_inventoryModelId}/inventory_return_locations`, params, options);
    }
    async attachments(inventoryModelId, params, options) {
        const _inventoryModelId = inventoryModelId.id || inventoryModelId;
        return this.resources.fetch({ type: 'attachments' }, `inventory_models/${_inventoryModelId}/attachments`, params, options);
    }
    async versions(inventoryModelId, params, options) {
        const _inventoryModelId = inventoryModelId.id || inventoryModelId;
        return this.resources.fetch({ type: 'versions' }, `inventory_models/${_inventoryModelId}/versions`, params, options);
    }
    isInventoryModel(resource) {
        return resource.type && (resource.type === InventoryModels.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: InventoryModels.TYPE } : { id: id.id, type: InventoryModels.TYPE };
    }
    type() {
        return InventoryModels.TYPE;
    }
}
InventoryModels.TYPE = 'inventory_models';
export default InventoryModels;
