import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { ShippingMethod } from './shipping_methods';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type ShippingMethodTierType = 'shipping_method_tiers';
type ShippingMethodTierRel = ResourceRel & {
    type: ShippingMethodTierType;
};
interface ShippingMethodTier extends Resource {
    readonly type: ShippingMethodTierType;
    name: string;
    up_to?: number | null;
    price_amount_cents: number;
    price_amount_float?: number | null;
    formatted_price_amount?: string | null;
    shipping_method?: ShippingMethod | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
declare class ShippingMethodTiers extends ApiResource<ShippingMethodTier> {
    static readonly TYPE: ShippingMethodTierType;
    shipping_method(shippingMethodTierId: string | ShippingMethodTier, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingMethod>;
    attachments(shippingMethodTierId: string | ShippingMethodTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(shippingMethodTierId: string | ShippingMethodTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isShippingMethodTier(resource: any): resource is ShippingMethodTier;
    relationship(id: string | ResourceId | null): ShippingMethodTierRel;
    type(): ShippingMethodTierType;
}
export default ShippingMethodTiers;
export type { ShippingMethodTier, ShippingMethodTierType };
