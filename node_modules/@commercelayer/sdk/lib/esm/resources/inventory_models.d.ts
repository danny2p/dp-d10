import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { InventoryStockLocation } from './inventory_stock_locations';
import type { InventoryReturnLocation } from './inventory_return_locations';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type InventoryModelType = 'inventory_models';
type InventoryModelRel = ResourceRel & {
    type: InventoryModelType;
};
interface InventoryModel extends Resource {
    readonly type: InventoryModelType;
    name: string;
    strategy?: string | null;
    stock_locations_cutoff?: number | null;
    stock_reservation_cutoff?: number | null;
    inventory_stock_locations?: InventoryStockLocation[] | null;
    inventory_return_locations?: InventoryReturnLocation[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface InventoryModelCreate extends ResourceCreate {
    name: string;
    strategy?: string | null;
    stock_locations_cutoff?: number | null;
    stock_reservation_cutoff?: number | null;
}
interface InventoryModelUpdate extends ResourceUpdate {
    name?: string | null;
    strategy?: string | null;
    stock_locations_cutoff?: number | null;
    stock_reservation_cutoff?: number | null;
}
declare class InventoryModels extends ApiResource<InventoryModel> {
    static readonly TYPE: InventoryModelType;
    create(resource: InventoryModelCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryModel>;
    update(resource: InventoryModelUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryModel>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    inventory_stock_locations(inventoryModelId: string | InventoryModel, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<InventoryStockLocation>>;
    inventory_return_locations(inventoryModelId: string | InventoryModel, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<InventoryReturnLocation>>;
    attachments(inventoryModelId: string | InventoryModel, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(inventoryModelId: string | InventoryModel, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isInventoryModel(resource: any): resource is InventoryModel;
    relationship(id: string | ResourceId | null): InventoryModelRel;
    type(): InventoryModelType;
}
export default InventoryModels;
export type { InventoryModel, InventoryModelCreate, InventoryModelUpdate, InventoryModelType };
