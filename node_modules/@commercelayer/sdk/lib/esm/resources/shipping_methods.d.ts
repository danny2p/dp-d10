import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market, MarketType } from './markets';
import type { ShippingZone, ShippingZoneType } from './shipping_zones';
import type { ShippingCategory, ShippingCategoryType } from './shipping_categories';
import type { StockLocation, StockLocationType } from './stock_locations';
import type { DeliveryLeadTime } from './delivery_lead_times';
import type { ShippingMethodTier, ShippingMethodTierType } from './shipping_method_tiers';
import type { ShippingWeightTier } from './shipping_weight_tiers';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type ShippingMethodType = 'shipping_methods';
type ShippingMethodRel = ResourceRel & {
    type: ShippingMethodType;
};
type MarketRel = ResourceRel & {
    type: MarketType;
};
type ShippingZoneRel = ResourceRel & {
    type: ShippingZoneType;
};
type ShippingCategoryRel = ResourceRel & {
    type: ShippingCategoryType;
};
type StockLocationRel = ResourceRel & {
    type: StockLocationType;
};
type ShippingMethodTierRel = ResourceRel & {
    type: ShippingMethodTierType;
};
interface ShippingMethod extends Resource {
    readonly type: ShippingMethodType;
    name: string;
    scheme?: string | null;
    currency_code?: string | null;
    external_prices_url?: string | null;
    disabled_at?: string | null;
    price_amount_cents: number;
    price_amount_float?: number | null;
    formatted_price_amount?: string | null;
    free_over_amount_cents?: number | null;
    free_over_amount_float?: number | null;
    formatted_free_over_amount?: string | null;
    use_subtotal?: boolean | null;
    price_amount_for_shipment_cents?: number | null;
    price_amount_for_shipment_float?: number | null;
    formatted_price_amount_for_shipment?: string | null;
    min_weight?: number | null;
    max_weight?: number | null;
    unit_of_weight?: string | null;
    market?: Market | null;
    shipping_zone?: ShippingZone | null;
    shipping_category?: ShippingCategory | null;
    stock_location?: StockLocation | null;
    delivery_lead_time_for_shipment?: DeliveryLeadTime | null;
    shipping_method_tiers?: ShippingMethodTier[] | null;
    shipping_weight_tiers?: ShippingWeightTier[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface ShippingMethodCreate extends ResourceCreate {
    name: string;
    scheme?: string | null;
    currency_code?: string | null;
    external_prices_url?: string | null;
    price_amount_cents: number;
    free_over_amount_cents?: number | null;
    use_subtotal?: boolean | null;
    min_weight?: number | null;
    max_weight?: number | null;
    unit_of_weight?: string | null;
    market?: MarketRel | null;
    shipping_zone?: ShippingZoneRel | null;
    shipping_category?: ShippingCategoryRel | null;
    stock_location?: StockLocationRel | null;
    shipping_method_tiers?: ShippingMethodTierRel[] | null;
}
interface ShippingMethodUpdate extends ResourceUpdate {
    name?: string | null;
    scheme?: string | null;
    currency_code?: string | null;
    external_prices_url?: string | null;
    _disable?: boolean | null;
    _enable?: boolean | null;
    price_amount_cents?: number | null;
    free_over_amount_cents?: number | null;
    use_subtotal?: boolean | null;
    min_weight?: number | null;
    max_weight?: number | null;
    unit_of_weight?: string | null;
    market?: MarketRel | null;
    shipping_zone?: ShippingZoneRel | null;
    shipping_category?: ShippingCategoryRel | null;
    stock_location?: StockLocationRel | null;
    shipping_method_tiers?: ShippingMethodTierRel[] | null;
}
declare class ShippingMethods extends ApiResource<ShippingMethod> {
    static readonly TYPE: ShippingMethodType;
    create(resource: ShippingMethodCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingMethod>;
    update(resource: ShippingMethodUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingMethod>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    market(shippingMethodId: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    shipping_zone(shippingMethodId: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingZone>;
    shipping_category(shippingMethodId: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingCategory>;
    stock_location(shippingMethodId: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockLocation>;
    delivery_lead_time_for_shipment(shippingMethodId: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<DeliveryLeadTime>;
    shipping_method_tiers(shippingMethodId: string | ShippingMethod, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<ShippingMethodTier>>;
    shipping_weight_tiers(shippingMethodId: string | ShippingMethod, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<ShippingWeightTier>>;
    attachments(shippingMethodId: string | ShippingMethod, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(shippingMethodId: string | ShippingMethod, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _disable(id: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingMethod>;
    _enable(id: string | ShippingMethod, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingMethod>;
    isShippingMethod(resource: any): resource is ShippingMethod;
    relationship(id: string | ResourceId | null): ShippingMethodRel;
    type(): ShippingMethodType;
}
export default ShippingMethods;
export type { ShippingMethod, ShippingMethodCreate, ShippingMethodUpdate, ShippingMethodType };
