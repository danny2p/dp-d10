import { ApiResource } from '../resource';
class SkuLists extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: SkuLists.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: SkuLists.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: SkuLists.TYPE } : id, options);
    }
    async customer(skuListId, params, options) {
        const _skuListId = skuListId.id || skuListId;
        return this.resources.fetch({ type: 'customers' }, `sku_lists/${_skuListId}/customer`, params, options);
    }
    async skus(skuListId, params, options) {
        const _skuListId = skuListId.id || skuListId;
        return this.resources.fetch({ type: 'skus' }, `sku_lists/${_skuListId}/skus`, params, options);
    }
    async sku_list_items(skuListId, params, options) {
        const _skuListId = skuListId.id || skuListId;
        return this.resources.fetch({ type: 'sku_list_items' }, `sku_lists/${_skuListId}/sku_list_items`, params, options);
    }
    async bundles(skuListId, params, options) {
        const _skuListId = skuListId.id || skuListId;
        return this.resources.fetch({ type: 'bundles' }, `sku_lists/${_skuListId}/bundles`, params, options);
    }
    async attachments(skuListId, params, options) {
        const _skuListId = skuListId.id || skuListId;
        return this.resources.fetch({ type: 'attachments' }, `sku_lists/${_skuListId}/attachments`, params, options);
    }
    async versions(skuListId, params, options) {
        const _skuListId = skuListId.id || skuListId;
        return this.resources.fetch({ type: 'versions' }, `sku_lists/${_skuListId}/versions`, params, options);
    }
    isSkuList(resource) {
        return resource.type && (resource.type === SkuLists.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: SkuLists.TYPE } : { id: id.id, type: SkuLists.TYPE };
    }
    type() {
        return SkuLists.TYPE;
    }
}
SkuLists.TYPE = 'sku_lists';
export default SkuLists;
