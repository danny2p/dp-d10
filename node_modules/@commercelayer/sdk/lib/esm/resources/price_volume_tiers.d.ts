import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Price, PriceType } from './prices';
import type { Attachment } from './attachments';
import type { Version } from './versions';
import type { Event } from './events';
type PriceVolumeTierType = 'price_volume_tiers';
type PriceVolumeTierRel = ResourceRel & {
    type: PriceVolumeTierType;
};
type PriceRel = ResourceRel & {
    type: PriceType;
};
interface PriceVolumeTier extends Resource {
    readonly type: PriceVolumeTierType;
    name: string;
    up_to?: number | null;
    price_amount_cents: number;
    price_amount_float?: number | null;
    formatted_price_amount?: string | null;
    price?: Price | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
    events?: Event[] | null;
}
interface PriceVolumeTierCreate extends ResourceCreate {
    name: string;
    up_to?: number | null;
    price_amount_cents: number;
    price: PriceRel;
}
interface PriceVolumeTierUpdate extends ResourceUpdate {
    name?: string | null;
    up_to?: number | null;
    price_amount_cents?: number | null;
    price?: PriceRel | null;
}
declare class PriceVolumeTiers extends ApiResource<PriceVolumeTier> {
    static readonly TYPE: PriceVolumeTierType;
    create(resource: PriceVolumeTierCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceVolumeTier>;
    update(resource: PriceVolumeTierUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceVolumeTier>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    price(priceVolumeTierId: string | PriceVolumeTier, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Price>;
    attachments(priceVolumeTierId: string | PriceVolumeTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(priceVolumeTierId: string | PriceVolumeTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    events(priceVolumeTierId: string | PriceVolumeTier, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    isPriceVolumeTier(resource: any): resource is PriceVolumeTier;
    relationship(id: string | ResourceId | null): PriceVolumeTierRel;
    type(): PriceVolumeTierType;
}
export default PriceVolumeTiers;
export type { PriceVolumeTier, PriceVolumeTierCreate, PriceVolumeTierUpdate, PriceVolumeTierType };
