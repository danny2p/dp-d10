import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { Attachment } from './attachments';
import type { Version } from './versions';
import type { TaxCategory, TaxCategoryType } from './tax_categories';
type TaxjarAccountType = 'taxjar_accounts';
type TaxjarAccountRel = ResourceRel & {
    type: TaxjarAccountType;
};
type TaxCategoryRel = ResourceRel & {
    type: TaxCategoryType;
};
interface TaxjarAccount extends Resource {
    readonly type: TaxjarAccountType;
    name: string;
    markets?: Market[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
    tax_categories?: TaxCategory[] | null;
}
interface TaxjarAccountCreate extends ResourceCreate {
    name: string;
    api_key: string;
    tax_categories?: TaxCategoryRel[] | null;
}
interface TaxjarAccountUpdate extends ResourceUpdate {
    name?: string | null;
    api_key?: string | null;
    tax_categories?: TaxCategoryRel[] | null;
}
declare class TaxjarAccounts extends ApiResource<TaxjarAccount> {
    static readonly TYPE: TaxjarAccountType;
    create(resource: TaxjarAccountCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<TaxjarAccount>;
    update(resource: TaxjarAccountUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<TaxjarAccount>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    markets(taxjarAccountId: string | TaxjarAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Market>>;
    attachments(taxjarAccountId: string | TaxjarAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(taxjarAccountId: string | TaxjarAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    tax_categories(taxjarAccountId: string | TaxjarAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<TaxCategory>>;
    isTaxjarAccount(resource: any): resource is TaxjarAccount;
    relationship(id: string | ResourceId | null): TaxjarAccountRel;
    type(): TaxjarAccountType;
}
export default TaxjarAccounts;
export type { TaxjarAccount, TaxjarAccountCreate, TaxjarAccountUpdate, TaxjarAccountType };
