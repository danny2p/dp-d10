import { ApiResource } from '../resource';
import type { Resource, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Order } from './orders';
import type { ShippingCategory } from './shipping_categories';
import type { StockLocation } from './stock_locations';
import type { Address } from './addresses';
import type { ShippingMethod, ShippingMethodType } from './shipping_methods';
import type { DeliveryLeadTime } from './delivery_lead_times';
import type { StockLineItem } from './stock_line_items';
import type { StockTransfer } from './stock_transfers';
import type { CarrierAccount } from './carrier_accounts';
import type { Parcel } from './parcels';
import type { Attachment } from './attachments';
import type { Event } from './events';
import type { Version } from './versions';
type ShipmentType = 'shipments';
type ShipmentRel = ResourceRel & {
    type: ShipmentType;
};
type ShippingMethodRel = ResourceRel & {
    type: ShippingMethodType;
};
interface Shipment extends Resource {
    readonly type: ShipmentType;
    number?: string | null;
    status: 'draft' | 'upcoming' | 'cancelled' | 'on_hold' | 'picking' | 'packing' | 'ready_to_ship' | 'shipped';
    currency_code?: string | null;
    cost_amount_cents?: number | null;
    cost_amount_float?: number | null;
    formatted_cost_amount?: string | null;
    skus_count?: number | null;
    selected_rate_id?: string | null;
    rates?: Array<Record<string, any>> | null;
    purchase_error_code?: string | null;
    purchase_error_message?: string | null;
    get_rates_errors?: Array<Record<string, any>> | null;
    get_rates_started_at?: string | null;
    get_rates_completed_at?: string | null;
    purchase_started_at?: string | null;
    purchase_completed_at?: string | null;
    purchase_failed_at?: string | null;
    on_hold_at?: string | null;
    picking_at?: string | null;
    packing_at?: string | null;
    ready_to_ship_at?: string | null;
    shipped_at?: string | null;
    order?: Order | null;
    shipping_category?: ShippingCategory | null;
    stock_location?: StockLocation | null;
    origin_address?: Address | null;
    shipping_address?: Address | null;
    shipping_method?: ShippingMethod | null;
    delivery_lead_time?: DeliveryLeadTime | null;
    /**
    * @deprecated This field should not be used as it may be removed in the future without notice
    */
    shipment_line_items?: object[];
    stock_line_items?: StockLineItem[] | null;
    stock_transfers?: StockTransfer[] | null;
    available_shipping_methods?: ShippingMethod[] | null;
    carrier_accounts?: CarrierAccount[] | null;
    parcels?: Parcel[] | null;
    attachments?: Attachment[] | null;
    events?: Event[] | null;
    versions?: Version[] | null;
}
interface ShipmentUpdate extends ResourceUpdate {
    _on_hold?: boolean | null;
    _picking?: boolean | null;
    _packing?: boolean | null;
    _ready_to_ship?: boolean | null;
    _ship?: boolean | null;
    _get_rates?: boolean | null;
    selected_rate_id?: string | null;
    _purchase?: boolean | null;
    shipping_method?: ShippingMethodRel | null;
}
declare class Shipments extends ApiResource<Shipment> {
    static readonly TYPE: ShipmentType;
    update(resource: ShipmentUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    order(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    shipping_category(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingCategory>;
    stock_location(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockLocation>;
    origin_address(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Address>;
    shipping_address(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Address>;
    shipping_method(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingMethod>;
    delivery_lead_time(shipmentId: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<DeliveryLeadTime>;
    stock_line_items(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockLineItem>>;
    stock_transfers(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockTransfer>>;
    available_shipping_methods(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<ShippingMethod>>;
    carrier_accounts(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<CarrierAccount>>;
    parcels(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Parcel>>;
    attachments(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    events(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    versions(shipmentId: string | Shipment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _on_hold(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    _picking(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    _packing(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    _ready_to_ship(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    _ship(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    _get_rates(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    _purchase(id: string | Shipment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    isShipment(resource: any): resource is Shipment;
    relationship(id: string | ResourceId | null): ShipmentRel;
    type(): ShipmentType;
}
export default Shipments;
export type { Shipment, ShipmentUpdate, ShipmentType };
