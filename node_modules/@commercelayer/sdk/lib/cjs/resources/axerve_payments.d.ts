import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Order, OrderType } from './orders';
import type { PaymentGateway } from './payment_gateways';
import type { Version } from './versions';
type AxervePaymentType = 'axerve_payments';
type AxervePaymentRel = ResourceRel & {
    type: AxervePaymentType;
};
type OrderRel = ResourceRel & {
    type: OrderType;
};
interface AxervePayment extends Resource {
    readonly type: AxervePaymentType;
    login: string;
    return_url: string;
    payment_request_data?: Record<string, any> | null;
    mismatched_amounts?: boolean | null;
    intent_amount_cents: number;
    intent_amount_float?: number | null;
    formatted_intent_amount?: string | null;
    payment_instrument?: Record<string, any> | null;
    order?: Order | null;
    payment_gateway?: PaymentGateway | null;
    versions?: Version[] | null;
}
interface AxervePaymentCreate extends ResourceCreate {
    return_url: string;
    order: OrderRel;
}
interface AxervePaymentUpdate extends ResourceUpdate {
    payment_request_data?: Record<string, any> | null;
    _update?: boolean | null;
    order?: OrderRel | null;
}
declare class AxervePayments extends ApiResource<AxervePayment> {
    static readonly TYPE: AxervePaymentType;
    create(resource: AxervePaymentCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AxervePayment>;
    update(resource: AxervePaymentUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AxervePayment>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    order(axervePaymentId: string | AxervePayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    payment_gateway(axervePaymentId: string | AxervePayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PaymentGateway>;
    versions(axervePaymentId: string | AxervePayment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _update(id: string | AxervePayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AxervePayment>;
    isAxervePayment(resource: any): resource is AxervePayment;
    relationship(id: string | ResourceId | null): AxervePaymentRel;
    type(): AxervePaymentType;
}
export default AxervePayments;
export type { AxervePayment, AxervePaymentCreate, AxervePaymentUpdate, AxervePaymentType };
