"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class BraintreeGateways extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: BraintreeGateways.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: BraintreeGateways.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: BraintreeGateways.TYPE } : id, options);
    }
    async payment_methods(braintreeGatewayId, params, options) {
        const _braintreeGatewayId = braintreeGatewayId.id || braintreeGatewayId;
        return this.resources.fetch({ type: 'payment_methods' }, `braintree_gateways/${_braintreeGatewayId}/payment_methods`, params, options);
    }
    async versions(braintreeGatewayId, params, options) {
        const _braintreeGatewayId = braintreeGatewayId.id || braintreeGatewayId;
        return this.resources.fetch({ type: 'versions' }, `braintree_gateways/${_braintreeGatewayId}/versions`, params, options);
    }
    async braintree_payments(braintreeGatewayId, params, options) {
        const _braintreeGatewayId = braintreeGatewayId.id || braintreeGatewayId;
        return this.resources.fetch({ type: 'braintree_payments' }, `braintree_gateways/${_braintreeGatewayId}/braintree_payments`, params, options);
    }
    isBraintreeGateway(resource) {
        return resource.type && (resource.type === BraintreeGateways.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: BraintreeGateways.TYPE } : { id: id.id, type: BraintreeGateways.TYPE };
    }
    type() {
        return BraintreeGateways.TYPE;
    }
}
BraintreeGateways.TYPE = 'braintree_gateways';
exports.default = BraintreeGateways;
