"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class LineItems extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: LineItems.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: LineItems.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: LineItems.TYPE } : id, options);
    }
    async order(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'orders' }, `line_items/${_lineItemId}/order`, params, options);
    }
    async line_item_options(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'line_item_options' }, `line_items/${_lineItemId}/line_item_options`, params, options);
    }
    async stock_reservations(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'stock_reservations' }, `line_items/${_lineItemId}/stock_reservations`, params, options);
    }
    async stock_line_items(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'stock_line_items' }, `line_items/${_lineItemId}/stock_line_items`, params, options);
    }
    async stock_transfers(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'stock_transfers' }, `line_items/${_lineItemId}/stock_transfers`, params, options);
    }
    async events(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'events' }, `line_items/${_lineItemId}/events`, params, options);
    }
    async tags(lineItemId, params, options) {
        const _lineItemId = lineItemId.id || lineItemId;
        return this.resources.fetch({ type: 'tags' }, `line_items/${_lineItemId}/tags`, params, options);
    }
    async _external_price(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: LineItems.TYPE, _external_price: true }, params, options);
    }
    async _reserve_stock(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: LineItems.TYPE, _reserve_stock: true }, params, options);
    }
    isLineItem(resource) {
        return resource.type && (resource.type === LineItems.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: LineItems.TYPE } : { id: id.id, type: LineItems.TYPE };
    }
    type() {
        return LineItems.TYPE;
    }
}
LineItems.TYPE = 'line_items';
exports.default = LineItems;
