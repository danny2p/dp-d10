import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Shipment } from './shipments';
import type { LineItem } from './line_items';
import type { StockItem } from './stock_items';
import type { Sku } from './skus';
import type { Version } from './versions';
type StockLineItemType = 'stock_line_items';
type StockLineItemRel = ResourceRel & {
    type: StockLineItemType;
};
interface StockLineItem extends Resource {
    readonly type: StockLineItemType;
    sku_code?: string | null;
    bundle_code?: string | null;
    quantity: number;
    shipment?: Shipment | null;
    line_item?: LineItem | null;
    stock_item?: StockItem | null;
    sku?: Sku | null;
    versions?: Version[] | null;
}
declare class StockLineItems extends ApiResource<StockLineItem> {
    static readonly TYPE: StockLineItemType;
    shipment(stockLineItemId: string | StockLineItem, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    line_item(stockLineItemId: string | StockLineItem, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<LineItem>;
    stock_item(stockLineItemId: string | StockLineItem, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockItem>;
    sku(stockLineItemId: string | StockLineItem, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Sku>;
    versions(stockLineItemId: string | StockLineItem, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isStockLineItem(resource: any): resource is StockLineItem;
    relationship(id: string | ResourceId | null): StockLineItemRel;
    type(): StockLineItemType;
}
export default StockLineItems;
export type { StockLineItem, StockLineItemType };
