"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class StockLineItems extends resource_1.ApiResource {
    async shipment(stockLineItemId, params, options) {
        const _stockLineItemId = stockLineItemId.id || stockLineItemId;
        return this.resources.fetch({ type: 'shipments' }, `stock_line_items/${_stockLineItemId}/shipment`, params, options);
    }
    async line_item(stockLineItemId, params, options) {
        const _stockLineItemId = stockLineItemId.id || stockLineItemId;
        return this.resources.fetch({ type: 'line_items' }, `stock_line_items/${_stockLineItemId}/line_item`, params, options);
    }
    async stock_item(stockLineItemId, params, options) {
        const _stockLineItemId = stockLineItemId.id || stockLineItemId;
        return this.resources.fetch({ type: 'stock_items' }, `stock_line_items/${_stockLineItemId}/stock_item`, params, options);
    }
    async sku(stockLineItemId, params, options) {
        const _stockLineItemId = stockLineItemId.id || stockLineItemId;
        return this.resources.fetch({ type: 'skus' }, `stock_line_items/${_stockLineItemId}/sku`, params, options);
    }
    async versions(stockLineItemId, params, options) {
        const _stockLineItemId = stockLineItemId.id || stockLineItemId;
        return this.resources.fetch({ type: 'versions' }, `stock_line_items/${_stockLineItemId}/versions`, params, options);
    }
    isStockLineItem(resource) {
        return resource.type && (resource.type === StockLineItems.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: StockLineItems.TYPE } : { id: id.id, type: StockLineItems.TYPE };
    }
    type() {
        return StockLineItems.TYPE;
    }
}
StockLineItems.TYPE = 'stock_line_items';
exports.default = StockLineItems;
