"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class StockReservations extends resource_1.ApiResource {
    async line_item(stockReservationId, params, options) {
        const _stockReservationId = stockReservationId.id || stockReservationId;
        return this.resources.fetch({ type: 'line_items' }, `stock_reservations/${_stockReservationId}/line_item`, params, options);
    }
    async order(stockReservationId, params, options) {
        const _stockReservationId = stockReservationId.id || stockReservationId;
        return this.resources.fetch({ type: 'orders' }, `stock_reservations/${_stockReservationId}/order`, params, options);
    }
    async stock_item(stockReservationId, params, options) {
        const _stockReservationId = stockReservationId.id || stockReservationId;
        return this.resources.fetch({ type: 'stock_items' }, `stock_reservations/${_stockReservationId}/stock_item`, params, options);
    }
    async reserved_stock(stockReservationId, params, options) {
        const _stockReservationId = stockReservationId.id || stockReservationId;
        return this.resources.fetch({ type: 'reserved_stocks' }, `stock_reservations/${_stockReservationId}/reserved_stock`, params, options);
    }
    async sku(stockReservationId, params, options) {
        const _stockReservationId = stockReservationId.id || stockReservationId;
        return this.resources.fetch({ type: 'skus' }, `stock_reservations/${_stockReservationId}/sku`, params, options);
    }
    isStockReservation(resource) {
        return resource.type && (resource.type === StockReservations.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: StockReservations.TYPE } : { id: id.id, type: StockReservations.TYPE };
    }
    type() {
        return StockReservations.TYPE;
    }
}
StockReservations.TYPE = 'stock_reservations';
exports.default = StockReservations;
