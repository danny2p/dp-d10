import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Order, OrderType } from './orders';
import type { PaymentGateway } from './payment_gateways';
import type { Version } from './versions';
type AdyenPaymentType = 'adyen_payments';
type AdyenPaymentRel = ResourceRel & {
    type: AdyenPaymentType;
};
type OrderRel = ResourceRel & {
    type: OrderType;
};
interface AdyenPayment extends Resource {
    readonly type: AdyenPaymentType;
    public_key?: string | null;
    payment_methods: Record<string, any>;
    payment_request_data?: Record<string, any> | null;
    payment_request_details?: Record<string, any> | null;
    payment_response?: Record<string, any> | null;
    mismatched_amounts?: boolean | null;
    payment_instrument?: Record<string, any> | null;
    order?: Order | null;
    payment_gateway?: PaymentGateway | null;
    versions?: Version[] | null;
}
interface AdyenPaymentCreate extends ResourceCreate {
    order: OrderRel;
}
interface AdyenPaymentUpdate extends ResourceUpdate {
    payment_request_data?: Record<string, any> | null;
    payment_request_details?: Record<string, any> | null;
    payment_response?: Record<string, any> | null;
    _details?: boolean | null;
    order?: OrderRel | null;
}
declare class AdyenPayments extends ApiResource<AdyenPayment> {
    static readonly TYPE: AdyenPaymentType;
    create(resource: AdyenPaymentCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AdyenPayment>;
    update(resource: AdyenPaymentUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AdyenPayment>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    order(adyenPaymentId: string | AdyenPayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    payment_gateway(adyenPaymentId: string | AdyenPayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PaymentGateway>;
    versions(adyenPaymentId: string | AdyenPayment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _details(id: string | AdyenPayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AdyenPayment>;
    isAdyenPayment(resource: any): resource is AdyenPayment;
    relationship(id: string | ResourceId | null): AdyenPaymentRel;
    type(): AdyenPaymentType;
}
export default AdyenPayments;
export type { AdyenPayment, AdyenPaymentCreate, AdyenPaymentUpdate, AdyenPaymentType };
