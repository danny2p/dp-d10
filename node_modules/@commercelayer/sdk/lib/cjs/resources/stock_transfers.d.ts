import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Sku, SkuType } from './skus';
import type { StockLocation, StockLocationType } from './stock_locations';
import type { Shipment, ShipmentType } from './shipments';
import type { LineItem, LineItemType } from './line_items';
import type { Event } from './events';
import type { Version } from './versions';
type StockTransferType = 'stock_transfers';
type StockTransferRel = ResourceRel & {
    type: StockTransferType;
};
type SkuRel = ResourceRel & {
    type: SkuType;
};
type StockLocationRel = ResourceRel & {
    type: StockLocationType;
};
type ShipmentRel = ResourceRel & {
    type: ShipmentType;
};
type LineItemRel = ResourceRel & {
    type: LineItemType;
};
interface StockTransfer extends Resource {
    readonly type: StockTransferType;
    sku_code?: string | null;
    status: 'draft' | 'upcoming' | 'picking' | 'in_transit' | 'completed' | 'cancelled';
    quantity: number;
    completed_at?: string | null;
    cancelled_at?: string | null;
    sku?: Sku | null;
    origin_stock_location?: StockLocation | null;
    destination_stock_location?: StockLocation | null;
    shipment?: Shipment | null;
    line_item?: LineItem | null;
    events?: Event[] | null;
    versions?: Version[] | null;
}
interface StockTransferCreate extends ResourceCreate {
    sku_code?: string | null;
    quantity: number;
    sku: SkuRel;
    origin_stock_location: StockLocationRel;
    destination_stock_location: StockLocationRel;
    shipment?: ShipmentRel | null;
    line_item?: LineItemRel | null;
}
interface StockTransferUpdate extends ResourceUpdate {
    sku_code?: string | null;
    _upcoming?: boolean | null;
    _picking?: boolean | null;
    _in_transit?: boolean | null;
    _complete?: boolean | null;
    _cancel?: boolean | null;
    sku?: SkuRel | null;
    origin_stock_location?: StockLocationRel | null;
    destination_stock_location?: StockLocationRel | null;
}
declare class StockTransfers extends ApiResource<StockTransfer> {
    static readonly TYPE: StockTransferType;
    create(resource: StockTransferCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    update(resource: StockTransferUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    sku(stockTransferId: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Sku>;
    origin_stock_location(stockTransferId: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockLocation>;
    destination_stock_location(stockTransferId: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockLocation>;
    shipment(stockTransferId: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Shipment>;
    line_item(stockTransferId: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<LineItem>;
    events(stockTransferId: string | StockTransfer, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    versions(stockTransferId: string | StockTransfer, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _upcoming(id: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    _picking(id: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    _in_transit(id: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    _complete(id: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    _cancel(id: string | StockTransfer, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockTransfer>;
    isStockTransfer(resource: any): resource is StockTransfer;
    relationship(id: string | ResourceId | null): StockTransferRel;
    type(): StockTransferType;
}
export default StockTransfers;
export type { StockTransfer, StockTransferCreate, StockTransferUpdate, StockTransferType };
