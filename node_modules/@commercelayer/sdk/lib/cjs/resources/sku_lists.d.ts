import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Customer, CustomerType } from './customers';
import type { Sku } from './skus';
import type { SkuListItem } from './sku_list_items';
import type { Bundle } from './bundles';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type SkuListType = 'sku_lists';
type SkuListRel = ResourceRel & {
    type: SkuListType;
};
type CustomerRel = ResourceRel & {
    type: CustomerType;
};
interface SkuList extends Resource {
    readonly type: SkuListType;
    name: string;
    slug: string;
    description?: string | null;
    image_url?: string | null;
    manual?: boolean | null;
    sku_code_regex?: string | null;
    customer?: Customer | null;
    skus?: Sku[] | null;
    sku_list_items?: SkuListItem[] | null;
    bundles?: Bundle[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface SkuListCreate extends ResourceCreate {
    name: string;
    description?: string | null;
    image_url?: string | null;
    manual?: boolean | null;
    sku_code_regex?: string | null;
    customer?: CustomerRel | null;
}
interface SkuListUpdate extends ResourceUpdate {
    name?: string | null;
    description?: string | null;
    image_url?: string | null;
    manual?: boolean | null;
    sku_code_regex?: string | null;
    customer?: CustomerRel | null;
}
declare class SkuLists extends ApiResource<SkuList> {
    static readonly TYPE: SkuListType;
    create(resource: SkuListCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SkuList>;
    update(resource: SkuListUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SkuList>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    customer(skuListId: string | SkuList, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Customer>;
    skus(skuListId: string | SkuList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Sku>>;
    sku_list_items(skuListId: string | SkuList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<SkuListItem>>;
    bundles(skuListId: string | SkuList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Bundle>>;
    attachments(skuListId: string | SkuList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(skuListId: string | SkuList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isSkuList(resource: any): resource is SkuList;
    relationship(id: string | ResourceId | null): SkuListRel;
    type(): SkuListType;
}
export default SkuLists;
export type { SkuList, SkuListCreate, SkuListUpdate, SkuListType };
