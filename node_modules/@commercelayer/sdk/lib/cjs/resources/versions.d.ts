import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourceRel } from '../resource';
type VersionType = 'versions';
type VersionRel = ResourceRel & {
    type: VersionType;
};
interface Version extends Resource {
    readonly type: VersionType;
    resource_type?: string | null;
    resource_id?: string | null;
    event?: string | null;
    changes?: Record<string, any> | null;
    who?: Record<string, any> | null;
}
declare class Versions extends ApiResource<Version> {
    static readonly TYPE: VersionType;
    isVersion(resource: any): resource is Version;
    relationship(id: string | ResourceId | null): VersionRel;
    type(): VersionType;
}
export default Versions;
export type { Version, VersionType };
