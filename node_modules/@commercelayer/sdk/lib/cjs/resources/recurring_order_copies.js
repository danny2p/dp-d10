"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class RecurringOrderCopies extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: RecurringOrderCopies.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: RecurringOrderCopies.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: RecurringOrderCopies.TYPE } : id, options);
    }
    async source_order(recurringOrderCopyId, params, options) {
        const _recurringOrderCopyId = recurringOrderCopyId.id || recurringOrderCopyId;
        return this.resources.fetch({ type: 'orders' }, `recurring_order_copies/${_recurringOrderCopyId}/source_order`, params, options);
    }
    async target_order(recurringOrderCopyId, params, options) {
        const _recurringOrderCopyId = recurringOrderCopyId.id || recurringOrderCopyId;
        return this.resources.fetch({ type: 'orders' }, `recurring_order_copies/${_recurringOrderCopyId}/target_order`, params, options);
    }
    async events(recurringOrderCopyId, params, options) {
        const _recurringOrderCopyId = recurringOrderCopyId.id || recurringOrderCopyId;
        return this.resources.fetch({ type: 'events' }, `recurring_order_copies/${_recurringOrderCopyId}/events`, params, options);
    }
    async order_subscription(recurringOrderCopyId, params, options) {
        const _recurringOrderCopyId = recurringOrderCopyId.id || recurringOrderCopyId;
        return this.resources.fetch({ type: 'order_subscriptions' }, `recurring_order_copies/${_recurringOrderCopyId}/order_subscription`, params, options);
    }
    isRecurringOrderCopy(resource) {
        return resource.type && (resource.type === RecurringOrderCopies.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: RecurringOrderCopies.TYPE } : { id: id.id, type: RecurringOrderCopies.TYPE };
    }
    type() {
        return RecurringOrderCopies.TYPE;
    }
}
RecurringOrderCopies.TYPE = 'recurring_order_copies';
exports.default = RecurringOrderCopies;
