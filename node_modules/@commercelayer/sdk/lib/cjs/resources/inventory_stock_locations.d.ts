import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { StockLocation, StockLocationType } from './stock_locations';
import type { InventoryModel, InventoryModelType } from './inventory_models';
import type { Version } from './versions';
type InventoryStockLocationType = 'inventory_stock_locations';
type InventoryStockLocationRel = ResourceRel & {
    type: InventoryStockLocationType;
};
type StockLocationRel = ResourceRel & {
    type: StockLocationType;
};
type InventoryModelRel = ResourceRel & {
    type: InventoryModelType;
};
interface InventoryStockLocation extends Resource {
    readonly type: InventoryStockLocationType;
    priority: number;
    on_hold?: boolean | null;
    stock_location?: StockLocation | null;
    inventory_model?: InventoryModel | null;
    versions?: Version[] | null;
}
interface InventoryStockLocationCreate extends ResourceCreate {
    priority: number;
    on_hold?: boolean | null;
    stock_location: StockLocationRel;
    inventory_model: InventoryModelRel;
}
interface InventoryStockLocationUpdate extends ResourceUpdate {
    priority?: number | null;
    on_hold?: boolean | null;
    stock_location?: StockLocationRel | null;
    inventory_model?: InventoryModelRel | null;
}
declare class InventoryStockLocations extends ApiResource<InventoryStockLocation> {
    static readonly TYPE: InventoryStockLocationType;
    create(resource: InventoryStockLocationCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryStockLocation>;
    update(resource: InventoryStockLocationUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryStockLocation>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    stock_location(inventoryStockLocationId: string | InventoryStockLocation, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockLocation>;
    inventory_model(inventoryStockLocationId: string | InventoryStockLocation, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryModel>;
    versions(inventoryStockLocationId: string | InventoryStockLocation, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isInventoryStockLocation(resource: any): resource is InventoryStockLocation;
    relationship(id: string | ResourceId | null): InventoryStockLocationRel;
    type(): InventoryStockLocationType;
}
export default InventoryStockLocations;
export type { InventoryStockLocation, InventoryStockLocationCreate, InventoryStockLocationUpdate, InventoryStockLocationType };
