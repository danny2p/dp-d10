import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type ExternalTaxCalculatorType = 'external_tax_calculators';
type ExternalTaxCalculatorRel = ResourceRel & {
    type: ExternalTaxCalculatorType;
};
interface ExternalTaxCalculator extends Resource {
    readonly type: ExternalTaxCalculatorType;
    name: string;
    tax_calculator_url: string;
    shared_secret: string;
    markets?: Market[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface ExternalTaxCalculatorCreate extends ResourceCreate {
    name: string;
    tax_calculator_url: string;
}
interface ExternalTaxCalculatorUpdate extends ResourceUpdate {
    name?: string | null;
    tax_calculator_url?: string | null;
}
declare class ExternalTaxCalculators extends ApiResource<ExternalTaxCalculator> {
    static readonly TYPE: ExternalTaxCalculatorType;
    create(resource: ExternalTaxCalculatorCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ExternalTaxCalculator>;
    update(resource: ExternalTaxCalculatorUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ExternalTaxCalculator>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    markets(externalTaxCalculatorId: string | ExternalTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Market>>;
    attachments(externalTaxCalculatorId: string | ExternalTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(externalTaxCalculatorId: string | ExternalTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isExternalTaxCalculator(resource: any): resource is ExternalTaxCalculator;
    relationship(id: string | ResourceId | null): ExternalTaxCalculatorRel;
    type(): ExternalTaxCalculatorType;
}
export default ExternalTaxCalculators;
export type { ExternalTaxCalculator, ExternalTaxCalculatorCreate, ExternalTaxCalculatorUpdate, ExternalTaxCalculatorType };
