import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type CarrierAccountType = 'carrier_accounts';
type CarrierAccountRel = ResourceRel & {
    type: CarrierAccountType;
};
interface CarrierAccount extends Resource {
    readonly type: CarrierAccountType;
    name?: string | null;
    easypost_type?: string | null;
    easypost_id?: string | null;
    market?: Market | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
declare class CarrierAccounts extends ApiResource<CarrierAccount> {
    static readonly TYPE: CarrierAccountType;
    market(carrierAccountId: string | CarrierAccount, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    attachments(carrierAccountId: string | CarrierAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(carrierAccountId: string | CarrierAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isCarrierAccount(resource: any): resource is CarrierAccount;
    relationship(id: string | ResourceId | null): CarrierAccountRel;
    type(): CarrierAccountType;
}
export default CarrierAccounts;
export type { CarrierAccount, CarrierAccountType };
