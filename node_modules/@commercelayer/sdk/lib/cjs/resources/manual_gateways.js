"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class ManualGateways extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: ManualGateways.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: ManualGateways.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: ManualGateways.TYPE } : id, options);
    }
    async payment_methods(manualGatewayId, params, options) {
        const _manualGatewayId = manualGatewayId.id || manualGatewayId;
        return this.resources.fetch({ type: 'payment_methods' }, `manual_gateways/${_manualGatewayId}/payment_methods`, params, options);
    }
    async versions(manualGatewayId, params, options) {
        const _manualGatewayId = manualGatewayId.id || manualGatewayId;
        return this.resources.fetch({ type: 'versions' }, `manual_gateways/${_manualGatewayId}/versions`, params, options);
    }
    isManualGateway(resource) {
        return resource.type && (resource.type === ManualGateways.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: ManualGateways.TYPE } : { id: id.id, type: ManualGateways.TYPE };
    }
    type() {
        return ManualGateways.TYPE;
    }
}
ManualGateways.TYPE = 'manual_gateways';
exports.default = ManualGateways;
