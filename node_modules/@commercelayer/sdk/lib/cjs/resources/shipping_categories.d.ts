import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Sku } from './skus';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type ShippingCategoryType = 'shipping_categories';
type ShippingCategoryRel = ResourceRel & {
    type: ShippingCategoryType;
};
interface ShippingCategory extends Resource {
    readonly type: ShippingCategoryType;
    name: string;
    skus?: Sku[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface ShippingCategoryCreate extends ResourceCreate {
    name: string;
}
interface ShippingCategoryUpdate extends ResourceUpdate {
    name?: string | null;
}
declare class ShippingCategories extends ApiResource<ShippingCategory> {
    static readonly TYPE: ShippingCategoryType;
    create(resource: ShippingCategoryCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingCategory>;
    update(resource: ShippingCategoryUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingCategory>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    skus(shippingCategoryId: string | ShippingCategory, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Sku>>;
    attachments(shippingCategoryId: string | ShippingCategory, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(shippingCategoryId: string | ShippingCategory, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isShippingCategory(resource: any): resource is ShippingCategory;
    relationship(id: string | ResourceId | null): ShippingCategoryRel;
    type(): ShippingCategoryType;
}
export default ShippingCategories;
export type { ShippingCategory, ShippingCategoryCreate, ShippingCategoryUpdate, ShippingCategoryType };
