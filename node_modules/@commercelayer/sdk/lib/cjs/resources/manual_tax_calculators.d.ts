import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { Attachment } from './attachments';
import type { Version } from './versions';
import type { TaxRule, TaxRuleType } from './tax_rules';
type ManualTaxCalculatorType = 'manual_tax_calculators';
type ManualTaxCalculatorRel = ResourceRel & {
    type: ManualTaxCalculatorType;
};
type TaxRuleRel = ResourceRel & {
    type: TaxRuleType;
};
interface ManualTaxCalculator extends Resource {
    readonly type: ManualTaxCalculatorType;
    name: string;
    markets?: Market[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
    tax_rules?: TaxRule[] | null;
}
interface ManualTaxCalculatorCreate extends ResourceCreate {
    name: string;
    tax_rules?: TaxRuleRel[] | null;
}
interface ManualTaxCalculatorUpdate extends ResourceUpdate {
    name?: string | null;
    tax_rules?: TaxRuleRel[] | null;
}
declare class ManualTaxCalculators extends ApiResource<ManualTaxCalculator> {
    static readonly TYPE: ManualTaxCalculatorType;
    create(resource: ManualTaxCalculatorCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ManualTaxCalculator>;
    update(resource: ManualTaxCalculatorUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ManualTaxCalculator>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    markets(manualTaxCalculatorId: string | ManualTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Market>>;
    attachments(manualTaxCalculatorId: string | ManualTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(manualTaxCalculatorId: string | ManualTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    tax_rules(manualTaxCalculatorId: string | ManualTaxCalculator, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<TaxRule>>;
    isManualTaxCalculator(resource: any): resource is ManualTaxCalculator;
    relationship(id: string | ResourceId | null): ManualTaxCalculatorRel;
    type(): ManualTaxCalculatorType;
}
export default ManualTaxCalculators;
export type { ManualTaxCalculator, ManualTaxCalculatorCreate, ManualTaxCalculatorUpdate, ManualTaxCalculatorType };
