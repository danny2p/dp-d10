"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class FreeShippingPromotions extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: FreeShippingPromotions.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: FreeShippingPromotions.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: FreeShippingPromotions.TYPE } : id, options);
    }
    async market(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'markets' }, `free_shipping_promotions/${_freeShippingPromotionId}/market`, params, options);
    }
    async order_amount_promotion_rule(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'order_amount_promotion_rules' }, `free_shipping_promotions/${_freeShippingPromotionId}/order_amount_promotion_rule`, params, options);
    }
    async sku_list_promotion_rule(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'sku_list_promotion_rules' }, `free_shipping_promotions/${_freeShippingPromotionId}/sku_list_promotion_rule`, params, options);
    }
    async coupon_codes_promotion_rule(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'coupon_codes_promotion_rules' }, `free_shipping_promotions/${_freeShippingPromotionId}/coupon_codes_promotion_rule`, params, options);
    }
    async coupons(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'coupons' }, `free_shipping_promotions/${_freeShippingPromotionId}/coupons`, params, options);
    }
    async sku_list(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'sku_lists' }, `free_shipping_promotions/${_freeShippingPromotionId}/sku_list`, params, options);
    }
    async attachments(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'attachments' }, `free_shipping_promotions/${_freeShippingPromotionId}/attachments`, params, options);
    }
    async events(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'events' }, `free_shipping_promotions/${_freeShippingPromotionId}/events`, params, options);
    }
    async tags(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'tags' }, `free_shipping_promotions/${_freeShippingPromotionId}/tags`, params, options);
    }
    async versions(freeShippingPromotionId, params, options) {
        const _freeShippingPromotionId = freeShippingPromotionId.id || freeShippingPromotionId;
        return this.resources.fetch({ type: 'versions' }, `free_shipping_promotions/${_freeShippingPromotionId}/versions`, params, options);
    }
    async _disable(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: FreeShippingPromotions.TYPE, _disable: true }, params, options);
    }
    async _enable(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: FreeShippingPromotions.TYPE, _enable: true }, params, options);
    }
    isFreeShippingPromotion(resource) {
        return resource.type && (resource.type === FreeShippingPromotions.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: FreeShippingPromotions.TYPE } : { id: id.id, type: FreeShippingPromotions.TYPE };
    }
    type() {
        return FreeShippingPromotions.TYPE;
    }
}
FreeShippingPromotions.TYPE = 'free_shipping_promotions';
exports.default = FreeShippingPromotions;
