import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { ShippingCategory, ShippingCategoryType } from './shipping_categories';
import type { Price } from './prices';
import type { StockItem } from './stock_items';
import type { StockReservation } from './stock_reservations';
import type { DeliveryLeadTime } from './delivery_lead_times';
import type { SkuOption } from './sku_options';
import type { Attachment } from './attachments';
import type { Event } from './events';
import type { Tag, TagType } from './tags';
import type { Version } from './versions';
type SkuType = 'skus';
type SkuRel = ResourceRel & {
    type: SkuType;
};
type ShippingCategoryRel = ResourceRel & {
    type: ShippingCategoryType;
};
type TagRel = ResourceRel & {
    type: TagType;
};
interface Sku extends Resource {
    readonly type: SkuType;
    code: string;
    name: string;
    description?: string | null;
    image_url?: string | null;
    pieces_per_pack?: number | null;
    weight?: number | null;
    unit_of_weight?: 'gr' | 'lb' | 'oz' | null;
    hs_tariff_number?: string | null;
    do_not_ship?: boolean | null;
    do_not_track?: boolean | null;
    inventory?: Record<string, any> | null;
    shipping_category?: ShippingCategory | null;
    prices?: Price[] | null;
    stock_items?: StockItem[] | null;
    stock_reservations?: StockReservation[] | null;
    delivery_lead_times?: DeliveryLeadTime[] | null;
    sku_options?: SkuOption[] | null;
    attachments?: Attachment[] | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
    versions?: Version[] | null;
}
interface SkuCreate extends ResourceCreate {
    code: string;
    name: string;
    description?: string | null;
    image_url?: string | null;
    pieces_per_pack?: number | null;
    weight?: number | null;
    unit_of_weight?: 'gr' | 'lb' | 'oz' | null;
    hs_tariff_number?: string | null;
    do_not_ship?: boolean | null;
    do_not_track?: boolean | null;
    shipping_category: ShippingCategoryRel;
    tags?: TagRel[] | null;
}
interface SkuUpdate extends ResourceUpdate {
    code?: string | null;
    name?: string | null;
    description?: string | null;
    image_url?: string | null;
    pieces_per_pack?: number | null;
    weight?: number | null;
    unit_of_weight?: 'gr' | 'lb' | 'oz' | null;
    hs_tariff_number?: string | null;
    do_not_ship?: boolean | null;
    do_not_track?: boolean | null;
    shipping_category?: ShippingCategoryRel | null;
    tags?: TagRel[] | null;
}
declare class Skus extends ApiResource<Sku> {
    static readonly TYPE: SkuType;
    create(resource: SkuCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Sku>;
    update(resource: SkuUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Sku>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    shipping_category(skuId: string | Sku, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<ShippingCategory>;
    prices(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Price>>;
    stock_items(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockItem>>;
    stock_reservations(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockReservation>>;
    delivery_lead_times(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<DeliveryLeadTime>>;
    sku_options(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<SkuOption>>;
    attachments(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    events(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    versions(skuId: string | Sku, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isSku(resource: any): resource is Sku;
    relationship(id: string | ResourceId | null): SkuRel;
    type(): SkuType;
}
export default Skus;
export type { Sku, SkuCreate, SkuUpdate, SkuType };
