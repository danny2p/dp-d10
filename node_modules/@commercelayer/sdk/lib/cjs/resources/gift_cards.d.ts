import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market, MarketType } from './markets';
import type { GiftCardRecipient, GiftCardRecipientType } from './gift_card_recipients';
import type { Attachment } from './attachments';
import type { Event } from './events';
import type { Tag, TagType } from './tags';
import type { Version } from './versions';
type GiftCardType = 'gift_cards';
type GiftCardRel = ResourceRel & {
    type: GiftCardType;
};
type MarketRel = ResourceRel & {
    type: MarketType;
};
type GiftCardRecipientRel = ResourceRel & {
    type: GiftCardRecipientType;
};
type TagRel = ResourceRel & {
    type: TagType;
};
interface GiftCard extends Resource {
    readonly type: GiftCardType;
    status: 'draft' | 'inactive' | 'active' | 'redeemed';
    code?: string | null;
    currency_code?: string | null;
    initial_balance_cents: number;
    initial_balance_float: number;
    formatted_initial_balance: string;
    balance_cents: number;
    balance_float: number;
    formatted_balance: string;
    balance_max_cents?: string | null;
    balance_max_float?: number | null;
    formatted_balance_max?: string | null;
    balance_log: Array<Record<string, any>>;
    single_use?: boolean | null;
    rechargeable?: boolean | null;
    image_url?: string | null;
    expires_at?: string | null;
    recipient_email?: string | null;
    market?: Market | null;
    gift_card_recipient?: GiftCardRecipient | null;
    attachments?: Attachment[] | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
    versions?: Version[] | null;
}
interface GiftCardCreate extends ResourceCreate {
    code?: string | null;
    currency_code?: string | null;
    balance_cents: number;
    balance_max_cents?: string | null;
    single_use?: boolean | null;
    rechargeable?: boolean | null;
    image_url?: string | null;
    expires_at?: string | null;
    recipient_email?: string | null;
    market?: MarketRel | null;
    gift_card_recipient?: GiftCardRecipientRel | null;
    tags?: TagRel[] | null;
}
interface GiftCardUpdate extends ResourceUpdate {
    currency_code?: string | null;
    balance_cents?: number | null;
    balance_max_cents?: string | null;
    single_use?: boolean | null;
    rechargeable?: boolean | null;
    image_url?: string | null;
    expires_at?: string | null;
    recipient_email?: string | null;
    _purchase?: boolean | null;
    _activate?: boolean | null;
    _deactivate?: boolean | null;
    _balance_change_cents?: number | null;
    market?: MarketRel | null;
    gift_card_recipient?: GiftCardRecipientRel | null;
    tags?: TagRel[] | null;
}
declare class GiftCards extends ApiResource<GiftCard> {
    static readonly TYPE: GiftCardType;
    create(resource: GiftCardCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCard>;
    update(resource: GiftCardUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCard>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    market(giftCardId: string | GiftCard, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    gift_card_recipient(giftCardId: string | GiftCard, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCardRecipient>;
    attachments(giftCardId: string | GiftCard, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    events(giftCardId: string | GiftCard, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(giftCardId: string | GiftCard, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    versions(giftCardId: string | GiftCard, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _purchase(id: string | GiftCard, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCard>;
    _activate(id: string | GiftCard, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCard>;
    _deactivate(id: string | GiftCard, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCard>;
    _balance_change_cents(id: string | GiftCard, triggerValue: number, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<GiftCard>;
    isGiftCard(resource: any): resource is GiftCard;
    relationship(id: string | ResourceId | null): GiftCardRel;
    type(): GiftCardType;
}
export default GiftCards;
export type { GiftCard, GiftCardCreate, GiftCardUpdate, GiftCardType };
