"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class InventoryReturnLocations extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: InventoryReturnLocations.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: InventoryReturnLocations.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: InventoryReturnLocations.TYPE } : id, options);
    }
    async stock_location(inventoryReturnLocationId, params, options) {
        const _inventoryReturnLocationId = inventoryReturnLocationId.id || inventoryReturnLocationId;
        return this.resources.fetch({ type: 'stock_locations' }, `inventory_return_locations/${_inventoryReturnLocationId}/stock_location`, params, options);
    }
    async inventory_model(inventoryReturnLocationId, params, options) {
        const _inventoryReturnLocationId = inventoryReturnLocationId.id || inventoryReturnLocationId;
        return this.resources.fetch({ type: 'inventory_models' }, `inventory_return_locations/${_inventoryReturnLocationId}/inventory_model`, params, options);
    }
    async versions(inventoryReturnLocationId, params, options) {
        const _inventoryReturnLocationId = inventoryReturnLocationId.id || inventoryReturnLocationId;
        return this.resources.fetch({ type: 'versions' }, `inventory_return_locations/${_inventoryReturnLocationId}/versions`, params, options);
    }
    isInventoryReturnLocation(resource) {
        return resource.type && (resource.type === InventoryReturnLocations.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: InventoryReturnLocations.TYPE } : { id: id.id, type: InventoryReturnLocations.TYPE };
    }
    type() {
        return InventoryReturnLocations.TYPE;
    }
}
InventoryReturnLocations.TYPE = 'inventory_return_locations';
exports.default = InventoryReturnLocations;
