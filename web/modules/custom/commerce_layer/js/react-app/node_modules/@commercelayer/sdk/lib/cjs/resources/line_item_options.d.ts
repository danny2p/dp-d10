import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { LineItem, LineItemType } from './line_items';
import type { SkuOption, SkuOptionType } from './sku_options';
import type { Event } from './events';
import type { Tag, TagType } from './tags';
type LineItemOptionType = 'line_item_options';
type LineItemOptionRel = ResourceRel & {
    type: LineItemOptionType;
};
type LineItemRel = ResourceRel & {
    type: LineItemType;
};
type SkuOptionRel = ResourceRel & {
    type: SkuOptionType;
};
type TagRel = ResourceRel & {
    type: TagType;
};
interface LineItemOption extends Resource {
    readonly type: LineItemOptionType;
    name?: string | null;
    quantity: number;
    currency_code?: string | null;
    unit_amount_cents?: number | null;
    unit_amount_float?: number | null;
    formatted_unit_amount?: string | null;
    total_amount_cents?: number | null;
    total_amount_float: number;
    formatted_total_amount?: string | null;
    delay_hours?: number | null;
    delay_days?: number | null;
    options: Record<string, any>;
    line_item?: LineItem | null;
    sku_option?: SkuOption | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
}
interface LineItemOptionCreate extends ResourceCreate {
    name?: string | null;
    quantity: number;
    options: Record<string, any>;
    line_item: LineItemRel;
    sku_option: SkuOptionRel;
    tags?: TagRel[] | null;
}
interface LineItemOptionUpdate extends ResourceUpdate {
    name?: string | null;
    quantity?: number | null;
    options?: Record<string, any> | null;
    sku_option?: SkuOptionRel | null;
    tags?: TagRel[] | null;
}
declare class LineItemOptions extends ApiResource<LineItemOption> {
    static readonly TYPE: LineItemOptionType;
    create(resource: LineItemOptionCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<LineItemOption>;
    update(resource: LineItemOptionUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<LineItemOption>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    line_item(lineItemOptionId: string | LineItemOption, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<LineItem>;
    sku_option(lineItemOptionId: string | LineItemOption, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SkuOption>;
    events(lineItemOptionId: string | LineItemOption, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(lineItemOptionId: string | LineItemOption, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    isLineItemOption(resource: any): resource is LineItemOption;
    relationship(id: string | ResourceId | null): LineItemOptionRel;
    type(): LineItemOptionType;
}
export default LineItemOptions;
export type { LineItemOption, LineItemOptionCreate, LineItemOptionUpdate, LineItemOptionType };
