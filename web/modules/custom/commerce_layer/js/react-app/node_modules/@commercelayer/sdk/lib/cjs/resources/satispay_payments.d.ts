import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Order, OrderType } from './orders';
import type { PaymentGateway } from './payment_gateways';
import type { Version } from './versions';
type SatispayPaymentType = 'satispay_payments';
type SatispayPaymentRel = ResourceRel & {
    type: SatispayPaymentType;
};
type OrderRel = ResourceRel & {
    type: OrderType;
};
interface SatispayPayment extends Resource {
    readonly type: SatispayPaymentType;
    payment_id?: string | null;
    flow?: string | null;
    status?: string | null;
    redirect_url?: string | null;
    payment_url?: string | null;
    intent_amount_cents: number;
    intent_amount_float?: number | null;
    formatted_intent_amount?: string | null;
    payment_response?: Record<string, any> | null;
    order?: Order | null;
    payment_gateway?: PaymentGateway | null;
    versions?: Version[] | null;
}
interface SatispayPaymentCreate extends ResourceCreate {
    flow?: string | null;
    redirect_url?: string | null;
    order: OrderRel;
}
interface SatispayPaymentUpdate extends ResourceUpdate {
    redirect_url?: string | null;
    _refresh?: boolean | null;
    order?: OrderRel | null;
}
declare class SatispayPayments extends ApiResource<SatispayPayment> {
    static readonly TYPE: SatispayPaymentType;
    create(resource: SatispayPaymentCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SatispayPayment>;
    update(resource: SatispayPaymentUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SatispayPayment>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    order(satispayPaymentId: string | SatispayPayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    payment_gateway(satispayPaymentId: string | SatispayPayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PaymentGateway>;
    versions(satispayPaymentId: string | SatispayPayment, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _refresh(id: string | SatispayPayment, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SatispayPayment>;
    isSatispayPayment(resource: any): resource is SatispayPayment;
    relationship(id: string | ResourceId | null): SatispayPaymentRel;
    type(): SatispayPaymentType;
}
export default SatispayPayments;
export type { SatispayPayment, SatispayPaymentCreate, SatispayPaymentUpdate, SatispayPaymentType };
