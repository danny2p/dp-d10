"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class SatispayPayments extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: SatispayPayments.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: SatispayPayments.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: SatispayPayments.TYPE } : id, options);
    }
    async order(satispayPaymentId, params, options) {
        const _satispayPaymentId = satispayPaymentId.id || satispayPaymentId;
        return this.resources.fetch({ type: 'orders' }, `satispay_payments/${_satispayPaymentId}/order`, params, options);
    }
    async payment_gateway(satispayPaymentId, params, options) {
        const _satispayPaymentId = satispayPaymentId.id || satispayPaymentId;
        return this.resources.fetch({ type: 'payment_gateways' }, `satispay_payments/${_satispayPaymentId}/payment_gateway`, params, options);
    }
    async versions(satispayPaymentId, params, options) {
        const _satispayPaymentId = satispayPaymentId.id || satispayPaymentId;
        return this.resources.fetch({ type: 'versions' }, `satispay_payments/${_satispayPaymentId}/versions`, params, options);
    }
    async _refresh(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: SatispayPayments.TYPE, _refresh: true }, params, options);
    }
    isSatispayPayment(resource) {
        return resource.type && (resource.type === SatispayPayments.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: SatispayPayments.TYPE } : { id: id.id, type: SatispayPayments.TYPE };
    }
    type() {
        return SatispayPayments.TYPE;
    }
}
SatispayPayments.TYPE = 'satispay_payments';
exports.default = SatispayPayments;
