import { ApiResource } from '../resource';
class CheckoutComGateways extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: CheckoutComGateways.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: CheckoutComGateways.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: CheckoutComGateways.TYPE } : id, options);
    }
    async payment_methods(checkoutComGatewayId, params, options) {
        const _checkoutComGatewayId = checkoutComGatewayId.id || checkoutComGatewayId;
        return this.resources.fetch({ type: 'payment_methods' }, `checkout_com_gateways/${_checkoutComGatewayId}/payment_methods`, params, options);
    }
    async versions(checkoutComGatewayId, params, options) {
        const _checkoutComGatewayId = checkoutComGatewayId.id || checkoutComGatewayId;
        return this.resources.fetch({ type: 'versions' }, `checkout_com_gateways/${_checkoutComGatewayId}/versions`, params, options);
    }
    async checkout_com_payments(checkoutComGatewayId, params, options) {
        const _checkoutComGatewayId = checkoutComGatewayId.id || checkoutComGatewayId;
        return this.resources.fetch({ type: 'checkout_com_payments' }, `checkout_com_gateways/${_checkoutComGatewayId}/checkout_com_payments`, params, options);
    }
    isCheckoutComGateway(resource) {
        return resource.type && (resource.type === CheckoutComGateways.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: CheckoutComGateways.TYPE } : { id: id.id, type: CheckoutComGateways.TYPE };
    }
    type() {
        return CheckoutComGateways.TYPE;
    }
}
CheckoutComGateways.TYPE = 'checkout_com_gateways';
export default CheckoutComGateways;
