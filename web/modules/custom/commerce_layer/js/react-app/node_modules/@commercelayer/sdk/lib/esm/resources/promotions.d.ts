import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { PromotionRule } from './promotion_rules';
import type { OrderAmountPromotionRule } from './order_amount_promotion_rules';
import type { SkuListPromotionRule } from './sku_list_promotion_rules';
import type { CouponCodesPromotionRule } from './coupon_codes_promotion_rules';
import type { Coupon } from './coupons';
import type { SkuList } from './sku_lists';
import type { Attachment } from './attachments';
import type { Event } from './events';
import type { Tag } from './tags';
import type { Version } from './versions';
type PromotionType = 'promotions';
type PromotionRel = ResourceRel & {
    type: PromotionType;
};
interface Promotion extends Resource {
    readonly type: PromotionType;
    name: string;
    currency_code?: string | null;
    exclusive?: boolean | null;
    priority?: number | null;
    starts_at: string;
    expires_at: string;
    total_usage_limit: number;
    total_usage_count?: number | null;
    active?: boolean | null;
    disabled_at?: string | null;
    market?: Market | null;
    promotion_rules?: PromotionRule[] | null;
    order_amount_promotion_rule?: OrderAmountPromotionRule | null;
    sku_list_promotion_rule?: SkuListPromotionRule | null;
    coupon_codes_promotion_rule?: CouponCodesPromotionRule | null;
    coupons?: Coupon[] | null;
    sku_list?: SkuList | null;
    attachments?: Attachment[] | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
    versions?: Version[] | null;
}
declare class Promotions extends ApiResource<Promotion> {
    static readonly TYPE: PromotionType;
    market(promotionId: string | Promotion, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    order_amount_promotion_rule(promotionId: string | Promotion, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<OrderAmountPromotionRule>;
    sku_list_promotion_rule(promotionId: string | Promotion, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SkuListPromotionRule>;
    coupon_codes_promotion_rule(promotionId: string | Promotion, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<CouponCodesPromotionRule>;
    coupons(promotionId: string | Promotion, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Coupon>>;
    sku_list(promotionId: string | Promotion, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SkuList>;
    attachments(promotionId: string | Promotion, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    events(promotionId: string | Promotion, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(promotionId: string | Promotion, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    versions(promotionId: string | Promotion, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isPromotion(resource: any): resource is Promotion;
    relationship(id: string | ResourceId | null): PromotionRel;
    type(): PromotionType;
}
export default Promotions;
export type { Promotion, PromotionType };
