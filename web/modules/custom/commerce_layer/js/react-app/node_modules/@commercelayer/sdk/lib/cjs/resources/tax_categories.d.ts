import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Sku, SkuType } from './skus';
import type { AvalaraAccount, AvalaraAccountType } from './avalara_accounts';
import type { TaxjarAccount, TaxjarAccountType } from './taxjar_accounts';
import type { ManualTaxCalculator, ManualTaxCalculatorType } from './manual_tax_calculators';
import type { ExternalTaxCalculator, ExternalTaxCalculatorType } from './external_tax_calculators';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type TaxCategoryType = 'tax_categories';
type TaxCategoryRel = ResourceRel & {
    type: TaxCategoryType;
};
type SkuRel = ResourceRel & {
    type: SkuType;
};
type AvalaraAccountRel = ResourceRel & {
    type: AvalaraAccountType;
};
type TaxjarAccountRel = ResourceRel & {
    type: TaxjarAccountType;
};
type ManualTaxCalculatorRel = ResourceRel & {
    type: ManualTaxCalculatorType;
};
type ExternalTaxCalculatorRel = ResourceRel & {
    type: ExternalTaxCalculatorType;
};
interface TaxCategory extends Resource {
    readonly type: TaxCategoryType;
    code: string;
    sku_code?: string | null;
    sku?: Sku | null;
    tax_calculator?: AvalaraAccount | TaxjarAccount | ManualTaxCalculator | ExternalTaxCalculator | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface TaxCategoryCreate extends ResourceCreate {
    code: string;
    sku_code?: string | null;
    sku: SkuRel;
    tax_calculator: AvalaraAccountRel | TaxjarAccountRel | ManualTaxCalculatorRel | ExternalTaxCalculatorRel;
}
interface TaxCategoryUpdate extends ResourceUpdate {
    code?: string | null;
    sku_code?: string | null;
    sku?: SkuRel | null;
}
declare class TaxCategories extends ApiResource<TaxCategory> {
    static readonly TYPE: TaxCategoryType;
    create(resource: TaxCategoryCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<TaxCategory>;
    update(resource: TaxCategoryUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<TaxCategory>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    sku(taxCategoryId: string | TaxCategory, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Sku>;
    attachments(taxCategoryId: string | TaxCategory, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(taxCategoryId: string | TaxCategory, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isTaxCategory(resource: any): resource is TaxCategory;
    relationship(id: string | ResourceId | null): TaxCategoryRel;
    type(): TaxCategoryType;
}
export default TaxCategories;
export type { TaxCategory, TaxCategoryCreate, TaxCategoryUpdate, TaxCategoryType };
