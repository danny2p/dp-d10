"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class BingGeocoders extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: BingGeocoders.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: BingGeocoders.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: BingGeocoders.TYPE } : id, options);
    }
    async addresses(bingGeocoderId, params, options) {
        const _bingGeocoderId = bingGeocoderId.id || bingGeocoderId;
        return this.resources.fetch({ type: 'addresses' }, `bing_geocoders/${_bingGeocoderId}/addresses`, params, options);
    }
    async attachments(bingGeocoderId, params, options) {
        const _bingGeocoderId = bingGeocoderId.id || bingGeocoderId;
        return this.resources.fetch({ type: 'attachments' }, `bing_geocoders/${_bingGeocoderId}/attachments`, params, options);
    }
    isBingGeocoder(resource) {
        return resource.type && (resource.type === BingGeocoders.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: BingGeocoders.TYPE } : { id: id.id, type: BingGeocoders.TYPE };
    }
    type() {
        return BingGeocoders.TYPE;
    }
}
BingGeocoders.TYPE = 'bing_geocoders';
exports.default = BingGeocoders;
