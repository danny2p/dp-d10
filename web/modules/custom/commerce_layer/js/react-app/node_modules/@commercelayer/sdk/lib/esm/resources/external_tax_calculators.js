import { ApiResource } from '../resource';
class ExternalTaxCalculators extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: ExternalTaxCalculators.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: ExternalTaxCalculators.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: ExternalTaxCalculators.TYPE } : id, options);
    }
    async markets(externalTaxCalculatorId, params, options) {
        const _externalTaxCalculatorId = externalTaxCalculatorId.id || externalTaxCalculatorId;
        return this.resources.fetch({ type: 'markets' }, `external_tax_calculators/${_externalTaxCalculatorId}/markets`, params, options);
    }
    async attachments(externalTaxCalculatorId, params, options) {
        const _externalTaxCalculatorId = externalTaxCalculatorId.id || externalTaxCalculatorId;
        return this.resources.fetch({ type: 'attachments' }, `external_tax_calculators/${_externalTaxCalculatorId}/attachments`, params, options);
    }
    async versions(externalTaxCalculatorId, params, options) {
        const _externalTaxCalculatorId = externalTaxCalculatorId.id || externalTaxCalculatorId;
        return this.resources.fetch({ type: 'versions' }, `external_tax_calculators/${_externalTaxCalculatorId}/versions`, params, options);
    }
    isExternalTaxCalculator(resource) {
        return resource.type && (resource.type === ExternalTaxCalculators.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: ExternalTaxCalculators.TYPE } : { id: id.id, type: ExternalTaxCalculators.TYPE };
    }
    type() {
        return ExternalTaxCalculators.TYPE;
    }
}
ExternalTaxCalculators.TYPE = 'external_tax_calculators';
export default ExternalTaxCalculators;
