import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Order, OrderType } from './orders';
import type { Event } from './events';
import type { OrderSubscription, OrderSubscriptionType } from './order_subscriptions';
type RecurringOrderCopyType = 'recurring_order_copies';
type RecurringOrderCopyRel = ResourceRel & {
    type: RecurringOrderCopyType;
};
type OrderRel = ResourceRel & {
    type: OrderType;
};
type OrderSubscriptionRel = ResourceRel & {
    type: OrderSubscriptionType;
};
interface RecurringOrderCopy extends Resource {
    readonly type: RecurringOrderCopyType;
    status: 'pending' | 'in_progress' | 'failed' | 'completed';
    started_at?: string | null;
    completed_at?: string | null;
    failed_at?: string | null;
    errors_log?: Record<string, any> | null;
    errors_count?: number | null;
    place_target_order?: boolean | null;
    reuse_wallet?: boolean | null;
    source_order?: Order | null;
    target_order?: Order | null;
    events?: Event[] | null;
    order_subscription?: OrderSubscription | null;
}
interface RecurringOrderCopyCreate extends ResourceCreate {
    place_target_order?: boolean | null;
    reuse_wallet?: boolean | null;
    source_order: OrderRel;
    order_subscription: OrderSubscriptionRel;
}
type RecurringOrderCopyUpdate = ResourceUpdate;
declare class RecurringOrderCopies extends ApiResource<RecurringOrderCopy> {
    static readonly TYPE: RecurringOrderCopyType;
    create(resource: RecurringOrderCopyCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<RecurringOrderCopy>;
    update(resource: RecurringOrderCopyUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<RecurringOrderCopy>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    source_order(recurringOrderCopyId: string | RecurringOrderCopy, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    target_order(recurringOrderCopyId: string | RecurringOrderCopy, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    events(recurringOrderCopyId: string | RecurringOrderCopy, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    order_subscription(recurringOrderCopyId: string | RecurringOrderCopy, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<OrderSubscription>;
    isRecurringOrderCopy(resource: any): resource is RecurringOrderCopy;
    relationship(id: string | ResourceId | null): RecurringOrderCopyRel;
    type(): RecurringOrderCopyType;
}
export default RecurringOrderCopies;
export type { RecurringOrderCopy, RecurringOrderCopyCreate, RecurringOrderCopyUpdate, RecurringOrderCopyType };
