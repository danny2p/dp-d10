import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { StockLocation, StockLocationType } from './stock_locations';
import type { InventoryModel, InventoryModelType } from './inventory_models';
import type { Version } from './versions';
type InventoryReturnLocationType = 'inventory_return_locations';
type InventoryReturnLocationRel = ResourceRel & {
    type: InventoryReturnLocationType;
};
type StockLocationRel = ResourceRel & {
    type: StockLocationType;
};
type InventoryModelRel = ResourceRel & {
    type: InventoryModelType;
};
interface InventoryReturnLocation extends Resource {
    readonly type: InventoryReturnLocationType;
    priority: number;
    stock_location?: StockLocation | null;
    inventory_model?: InventoryModel | null;
    versions?: Version[] | null;
}
interface InventoryReturnLocationCreate extends ResourceCreate {
    priority: number;
    stock_location: StockLocationRel;
    inventory_model: InventoryModelRel;
}
interface InventoryReturnLocationUpdate extends ResourceUpdate {
    priority?: number | null;
    stock_location?: StockLocationRel | null;
    inventory_model?: InventoryModelRel | null;
}
declare class InventoryReturnLocations extends ApiResource<InventoryReturnLocation> {
    static readonly TYPE: InventoryReturnLocationType;
    create(resource: InventoryReturnLocationCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryReturnLocation>;
    update(resource: InventoryReturnLocationUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryReturnLocation>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    stock_location(inventoryReturnLocationId: string | InventoryReturnLocation, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockLocation>;
    inventory_model(inventoryReturnLocationId: string | InventoryReturnLocation, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<InventoryModel>;
    versions(inventoryReturnLocationId: string | InventoryReturnLocation, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isInventoryReturnLocation(resource: any): resource is InventoryReturnLocation;
    relationship(id: string | ResourceId | null): InventoryReturnLocationRel;
    type(): InventoryReturnLocationType;
}
export default InventoryReturnLocations;
export type { InventoryReturnLocation, InventoryReturnLocationCreate, InventoryReturnLocationUpdate, InventoryReturnLocationType };
