import { ApiResource } from '../resource';
class PercentageDiscountPromotions extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: PercentageDiscountPromotions.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: PercentageDiscountPromotions.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: PercentageDiscountPromotions.TYPE } : id, options);
    }
    async market(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'markets' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/market`, params, options);
    }
    async order_amount_promotion_rule(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'order_amount_promotion_rules' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/order_amount_promotion_rule`, params, options);
    }
    async sku_list_promotion_rule(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'sku_list_promotion_rules' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/sku_list_promotion_rule`, params, options);
    }
    async coupon_codes_promotion_rule(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'coupon_codes_promotion_rules' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/coupon_codes_promotion_rule`, params, options);
    }
    async coupons(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'coupons' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/coupons`, params, options);
    }
    async sku_list(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'sku_lists' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/sku_list`, params, options);
    }
    async attachments(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'attachments' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/attachments`, params, options);
    }
    async events(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'events' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/events`, params, options);
    }
    async tags(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'tags' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/tags`, params, options);
    }
    async versions(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'versions' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/versions`, params, options);
    }
    async skus(percentageDiscountPromotionId, params, options) {
        const _percentageDiscountPromotionId = percentageDiscountPromotionId.id || percentageDiscountPromotionId;
        return this.resources.fetch({ type: 'skus' }, `percentage_discount_promotions/${_percentageDiscountPromotionId}/skus`, params, options);
    }
    async _disable(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: PercentageDiscountPromotions.TYPE, _disable: true }, params, options);
    }
    async _enable(id, params, options) {
        return this.resources.update({ id: (typeof id === 'string') ? id : id.id, type: PercentageDiscountPromotions.TYPE, _enable: true }, params, options);
    }
    isPercentageDiscountPromotion(resource) {
        return resource.type && (resource.type === PercentageDiscountPromotions.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: PercentageDiscountPromotions.TYPE } : { id: id.id, type: PercentageDiscountPromotions.TYPE };
    }
    type() {
        return PercentageDiscountPromotions.TYPE;
    }
}
PercentageDiscountPromotions.TYPE = 'percentage_discount_promotions';
export default PercentageDiscountPromotions;
