import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market, MarketType } from './markets';
import type { SkuList, SkuListType } from './sku_lists';
import type { Sku } from './skus';
import type { Attachment } from './attachments';
import type { Event } from './events';
import type { Tag, TagType } from './tags';
import type { Version } from './versions';
type BundleType = 'bundles';
type BundleRel = ResourceRel & {
    type: BundleType;
};
type MarketRel = ResourceRel & {
    type: MarketType;
};
type SkuListRel = ResourceRel & {
    type: SkuListType;
};
type TagRel = ResourceRel & {
    type: TagType;
};
interface Bundle extends Resource {
    readonly type: BundleType;
    code: string;
    name: string;
    currency_code?: string | null;
    description?: string | null;
    image_url?: string | null;
    do_not_ship?: boolean | null;
    do_not_track?: boolean | null;
    price_amount_cents: number;
    price_amount_float: number;
    formatted_price_amount: string;
    compare_at_amount_cents: number;
    compare_at_amount_float: number;
    formatted_compare_at_amount: string;
    skus_count?: number | null;
    market?: Market | null;
    sku_list?: SkuList | null;
    skus?: Sku[] | null;
    attachments?: Attachment[] | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
    versions?: Version[] | null;
}
interface BundleCreate extends ResourceCreate {
    code: string;
    name: string;
    currency_code?: string | null;
    description?: string | null;
    image_url?: string | null;
    price_amount_cents: number;
    compare_at_amount_cents: number;
    _compute_price_amount?: boolean | null;
    _compute_compare_at_amount?: boolean | null;
    market?: MarketRel | null;
    sku_list: SkuListRel;
    tags?: TagRel[] | null;
}
interface BundleUpdate extends ResourceUpdate {
    code?: string | null;
    name?: string | null;
    currency_code?: string | null;
    description?: string | null;
    image_url?: string | null;
    price_amount_cents?: number | null;
    compare_at_amount_cents?: number | null;
    _compute_price_amount?: boolean | null;
    _compute_compare_at_amount?: boolean | null;
    tags?: TagRel[] | null;
}
declare class Bundles extends ApiResource<Bundle> {
    static readonly TYPE: BundleType;
    create(resource: BundleCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Bundle>;
    update(resource: BundleUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Bundle>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    market(bundleId: string | Bundle, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    sku_list(bundleId: string | Bundle, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<SkuList>;
    skus(bundleId: string | Bundle, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Sku>>;
    attachments(bundleId: string | Bundle, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    events(bundleId: string | Bundle, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(bundleId: string | Bundle, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    versions(bundleId: string | Bundle, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _compute_price_amount(id: string | Bundle, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Bundle>;
    _compute_compare_at_amount(id: string | Bundle, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Bundle>;
    isBundle(resource: any): resource is Bundle;
    relationship(id: string | ResourceId | null): BundleRel;
    type(): BundleType;
}
export default Bundles;
export type { Bundle, BundleCreate, BundleUpdate, BundleType };
