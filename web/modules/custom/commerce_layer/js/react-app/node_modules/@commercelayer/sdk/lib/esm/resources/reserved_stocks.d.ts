import { ApiResource } from '../resource';
import type { Resource, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { StockItem } from './stock_items';
import type { Sku } from './skus';
import type { StockReservation } from './stock_reservations';
type ReservedStockType = 'reserved_stocks';
type ReservedStockRel = ResourceRel & {
    type: ReservedStockType;
};
interface ReservedStock extends Resource {
    readonly type: ReservedStockType;
    quantity: number;
    stock_item?: StockItem | null;
    sku?: Sku | null;
    stock_reservations?: StockReservation[] | null;
}
declare class ReservedStocks extends ApiResource<ReservedStock> {
    static readonly TYPE: ReservedStockType;
    stock_item(reservedStockId: string | ReservedStock, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<StockItem>;
    sku(reservedStockId: string | ReservedStock, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Sku>;
    stock_reservations(reservedStockId: string | ReservedStock, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockReservation>>;
    isReservedStock(resource: any): resource is ReservedStock;
    relationship(id: string | ResourceId | null): ReservedStockRel;
    type(): ReservedStockType;
}
export default ReservedStocks;
export type { ReservedStock, ReservedStockType };
