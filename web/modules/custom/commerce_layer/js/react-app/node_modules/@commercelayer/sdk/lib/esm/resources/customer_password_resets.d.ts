import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Customer } from './customers';
import type { Event } from './events';
type CustomerPasswordResetType = 'customer_password_resets';
type CustomerPasswordResetRel = ResourceRel & {
    type: CustomerPasswordResetType;
};
interface CustomerPasswordReset extends Resource {
    readonly type: CustomerPasswordResetType;
    customer_email: string;
    reset_password_token?: string | null;
    reset_password_at?: string | null;
    customer?: Customer | null;
    events?: Event[] | null;
}
interface CustomerPasswordResetCreate extends ResourceCreate {
    customer_email: string;
}
interface CustomerPasswordResetUpdate extends ResourceUpdate {
    customer_password?: string | null;
    _reset_password_token?: string | null;
}
declare class CustomerPasswordResets extends ApiResource<CustomerPasswordReset> {
    static readonly TYPE: CustomerPasswordResetType;
    create(resource: CustomerPasswordResetCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<CustomerPasswordReset>;
    update(resource: CustomerPasswordResetUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<CustomerPasswordReset>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    customer(customerPasswordResetId: string | CustomerPasswordReset, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Customer>;
    events(customerPasswordResetId: string | CustomerPasswordReset, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    _reset_password_token(id: string | CustomerPasswordReset, triggerValue: string, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<CustomerPasswordReset>;
    isCustomerPasswordReset(resource: any): resource is CustomerPasswordReset;
    relationship(id: string | ResourceId | null): CustomerPasswordResetRel;
    type(): CustomerPasswordResetType;
}
export default CustomerPasswordResets;
export type { CustomerPasswordReset, CustomerPasswordResetCreate, CustomerPasswordResetUpdate, CustomerPasswordResetType };
