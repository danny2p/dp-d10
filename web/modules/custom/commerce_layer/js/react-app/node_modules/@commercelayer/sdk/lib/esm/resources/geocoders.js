import { ApiResource } from '../resource';
class Geocoders extends ApiResource {
    async addresses(geocoderId, params, options) {
        const _geocoderId = geocoderId.id || geocoderId;
        return this.resources.fetch({ type: 'addresses' }, `geocoders/${_geocoderId}/addresses`, params, options);
    }
    async attachments(geocoderId, params, options) {
        const _geocoderId = geocoderId.id || geocoderId;
        return this.resources.fetch({ type: 'attachments' }, `geocoders/${_geocoderId}/attachments`, params, options);
    }
    isGeocoder(resource) {
        return resource.type && (resource.type === Geocoders.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: Geocoders.TYPE } : { id: id.id, type: Geocoders.TYPE };
    }
    type() {
        return Geocoders.TYPE;
    }
}
Geocoders.TYPE = 'geocoders';
export default Geocoders;
