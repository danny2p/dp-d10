import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Price } from './prices';
import type { Attachment } from './attachments';
import type { Version } from './versions';
type PriceListType = 'price_lists';
type PriceListRel = ResourceRel & {
    type: PriceListType;
};
interface PriceList extends Resource {
    readonly type: PriceListType;
    name: string;
    currency_code: string;
    tax_included?: boolean | null;
    prices?: Price[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
}
interface PriceListCreate extends ResourceCreate {
    name: string;
    currency_code: string;
    tax_included?: boolean | null;
}
interface PriceListUpdate extends ResourceUpdate {
    name?: string | null;
    currency_code?: string | null;
    tax_included?: boolean | null;
}
declare class PriceLists extends ApiResource<PriceList> {
    static readonly TYPE: PriceListType;
    create(resource: PriceListCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceList>;
    update(resource: PriceListUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PriceList>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    prices(priceListId: string | PriceList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Price>>;
    attachments(priceListId: string | PriceList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(priceListId: string | PriceList, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    isPriceList(resource: any): resource is PriceList;
    relationship(id: string | ResourceId | null): PriceListRel;
    type(): PriceListType;
}
export default PriceLists;
export type { PriceList, PriceListCreate, PriceListUpdate, PriceListType };
