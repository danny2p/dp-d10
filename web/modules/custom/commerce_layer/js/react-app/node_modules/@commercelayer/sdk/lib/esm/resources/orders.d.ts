import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market, MarketType } from './markets';
import type { Customer, CustomerType } from './customers';
import type { Address, AddressType } from './addresses';
import type { PaymentMethod, PaymentMethodType } from './payment_methods';
import type { CustomerPaymentSource } from './customer_payment_sources';
import type { Sku } from './skus';
import type { Bundle } from './bundles';
import type { AdyenPayment, AdyenPaymentType } from './adyen_payments';
import type { AxervePayment, AxervePaymentType } from './axerve_payments';
import type { BraintreePayment, BraintreePaymentType } from './braintree_payments';
import type { CheckoutComPayment, CheckoutComPaymentType } from './checkout_com_payments';
import type { ExternalPayment, ExternalPaymentType } from './external_payments';
import type { KlarnaPayment, KlarnaPaymentType } from './klarna_payments';
import type { PaypalPayment, PaypalPaymentType } from './paypal_payments';
import type { SatispayPayment, SatispayPaymentType } from './satispay_payments';
import type { StripePayment, StripePaymentType } from './stripe_payments';
import type { WireTransfer, WireTransferType } from './wire_transfers';
import type { LineItem } from './line_items';
import type { LineItemOption } from './line_item_options';
import type { StockReservation } from './stock_reservations';
import type { StockLineItem } from './stock_line_items';
import type { StockTransfer } from './stock_transfers';
import type { Shipment } from './shipments';
import type { Authorization } from './authorizations';
import type { Capture } from './captures';
import type { Void } from './voids';
import type { Refund } from './refunds';
import type { Return } from './returns';
import type { OrderSubscription } from './order_subscriptions';
import type { OrderFactory } from './order_factories';
import type { OrderCopy } from './order_copies';
import type { RecurringOrderCopy } from './recurring_order_copies';
import type { Attachment } from './attachments';
import type { Event } from './events';
import type { Tag, TagType } from './tags';
import type { Version } from './versions';
type OrderType = 'orders';
type OrderRel = ResourceRel & {
    type: OrderType;
};
type MarketRel = ResourceRel & {
    type: MarketType;
};
type CustomerRel = ResourceRel & {
    type: CustomerType;
};
type AddressRel = ResourceRel & {
    type: AddressType;
};
type PaymentMethodRel = ResourceRel & {
    type: PaymentMethodType;
};
type AdyenPaymentRel = ResourceRel & {
    type: AdyenPaymentType;
};
type AxervePaymentRel = ResourceRel & {
    type: AxervePaymentType;
};
type BraintreePaymentRel = ResourceRel & {
    type: BraintreePaymentType;
};
type CheckoutComPaymentRel = ResourceRel & {
    type: CheckoutComPaymentType;
};
type ExternalPaymentRel = ResourceRel & {
    type: ExternalPaymentType;
};
type KlarnaPaymentRel = ResourceRel & {
    type: KlarnaPaymentType;
};
type PaypalPaymentRel = ResourceRel & {
    type: PaypalPaymentType;
};
type SatispayPaymentRel = ResourceRel & {
    type: SatispayPaymentType;
};
type StripePaymentRel = ResourceRel & {
    type: StripePaymentType;
};
type WireTransferRel = ResourceRel & {
    type: WireTransferType;
};
type TagRel = ResourceRel & {
    type: TagType;
};
interface Order extends Resource {
    readonly type: OrderType;
    number?: number | null;
    autorefresh?: boolean | null;
    status: 'draft' | 'pending' | 'placed' | 'editing' | 'approved' | 'cancelled';
    payment_status: 'unpaid' | 'authorized' | 'partially_authorized' | 'paid' | 'partially_paid' | 'voided' | 'partially_voided' | 'refunded' | 'partially_refunded' | 'free';
    fulfillment_status: 'unfulfilled' | 'in_progress' | 'fulfilled' | 'not_required';
    guest?: boolean | null;
    editable?: boolean | null;
    customer_email?: string | null;
    language_code?: string | null;
    currency_code?: string | null;
    tax_included?: boolean | null;
    tax_rate?: number | null;
    freight_taxable?: boolean | null;
    payment_method_taxable?: boolean | null;
    adjustment_taxable?: boolean | null;
    gift_card_taxable?: boolean | null;
    requires_billing_info?: boolean | null;
    country_code?: string | null;
    shipping_country_code_lock?: string | null;
    coupon_code?: string | null;
    gift_card_code?: string | null;
    subtotal_amount_cents?: number | null;
    subtotal_amount_float?: number | null;
    formatted_subtotal_amount?: string | null;
    shipping_amount_cents?: number | null;
    shipping_amount_float?: number | null;
    formatted_shipping_amount?: string | null;
    payment_method_amount_cents?: number | null;
    payment_method_amount_float?: number | null;
    formatted_payment_method_amount?: string | null;
    discount_amount_cents?: number | null;
    discount_amount_float?: number | null;
    formatted_discount_amount?: string | null;
    adjustment_amount_cents?: number | null;
    adjustment_amount_float?: number | null;
    formatted_adjustment_amount?: string | null;
    gift_card_amount_cents?: number | null;
    gift_card_amount_float?: number | null;
    formatted_gift_card_amount?: string | null;
    total_tax_amount_cents?: number | null;
    total_tax_amount_float?: number | null;
    formatted_total_tax_amount?: string | null;
    subtotal_tax_amount_cents?: number | null;
    subtotal_tax_amount_float?: number | null;
    formatted_subtotal_tax_amount?: string | null;
    shipping_tax_amount_cents?: number | null;
    shipping_tax_amount_float?: number | null;
    formatted_shipping_tax_amount?: string | null;
    payment_method_tax_amount_cents?: number | null;
    payment_method_tax_amount_float?: number | null;
    formatted_payment_method_tax_amount?: string | null;
    adjustment_tax_amount_cents?: number | null;
    adjustment_tax_amount_float?: number | null;
    formatted_adjustment_tax_amount?: string | null;
    total_amount_cents?: number | null;
    total_amount_float?: number | null;
    formatted_total_amount?: string | null;
    total_taxable_amount_cents?: number | null;
    total_taxable_amount_float?: number | null;
    formatted_total_taxable_amount?: string | null;
    subtotal_taxable_amount_cents?: number | null;
    subtotal_taxable_amount_float?: number | null;
    formatted_subtotal_taxable_amount?: string | null;
    shipping_taxable_amount_cents?: number | null;
    shipping_taxable_amount_float?: number | null;
    formatted_shipping_taxable_amount?: string | null;
    payment_method_taxable_amount_cents?: number | null;
    payment_method_taxable_amount_float?: number | null;
    formatted_payment_method_taxable_amount?: string | null;
    adjustment_taxable_amount_cents?: number | null;
    adjustment_taxable_amount_float?: number | null;
    formatted_adjustment_taxable_amount?: string | null;
    total_amount_with_taxes_cents?: number | null;
    total_amount_with_taxes_float?: number | null;
    formatted_total_amount_with_taxes?: string | null;
    fees_amount_cents?: number | null;
    fees_amount_float?: number | null;
    formatted_fees_amount?: string | null;
    duty_amount_cents?: number | null;
    duty_amount_float?: number | null;
    formatted_duty_amount?: string | null;
    place_total_amount_cents?: number | null;
    place_total_amount_float?: number | null;
    formatted_place_total_amount?: string | null;
    skus_count?: number | null;
    line_item_options_count?: number | null;
    shipments_count?: number | null;
    tax_calculations_count?: number | null;
    validations_count?: number | null;
    payment_source_details?: Record<string, any> | null;
    token?: string | null;
    cart_url?: string | null;
    return_url?: string | null;
    terms_url?: string | null;
    privacy_url?: string | null;
    checkout_url?: string | null;
    placed_at?: string | null;
    approved_at?: string | null;
    cancelled_at?: string | null;
    payment_updated_at?: string | null;
    fulfillment_updated_at?: string | null;
    refreshed_at?: string | null;
    archived_at?: string | null;
    expires_at?: string | null;
    subscription_created_at?: string | null;
    market?: Market | null;
    customer?: Customer | null;
    shipping_address?: Address | null;
    billing_address?: Address | null;
    available_payment_methods?: PaymentMethod[] | null;
    available_customer_payment_sources?: CustomerPaymentSource[] | null;
    available_free_skus?: Sku[] | null;
    available_free_bundles?: Bundle[] | null;
    payment_method?: PaymentMethod | null;
    payment_source?: AdyenPayment | AxervePayment | BraintreePayment | CheckoutComPayment | ExternalPayment | KlarnaPayment | PaypalPayment | SatispayPayment | StripePayment | WireTransfer | null;
    line_items?: LineItem[] | null;
    line_item_options?: LineItemOption[] | null;
    stock_reservations?: StockReservation[] | null;
    stock_line_items?: StockLineItem[] | null;
    stock_transfers?: StockTransfer[] | null;
    shipments?: Shipment[] | null;
    transactions?: Array<Authorization | Capture | Void | Refund> | null;
    authorizations?: Authorization[] | null;
    captures?: Capture[] | null;
    voids?: Void[] | null;
    refunds?: Refund[] | null;
    returns?: Return[] | null;
    order_subscriptions?: OrderSubscription[] | null;
    order_factories?: OrderFactory[] | null;
    order_copies?: OrderCopy[] | null;
    recurring_order_copies?: RecurringOrderCopy[] | null;
    attachments?: Attachment[] | null;
    events?: Event[] | null;
    tags?: Tag[] | null;
    versions?: Version[] | null;
}
interface OrderCreate extends ResourceCreate {
    autorefresh?: boolean | null;
    guest?: boolean | null;
    customer_email?: string | null;
    customer_password?: string | null;
    language_code?: string | null;
    freight_taxable?: boolean | null;
    payment_method_taxable?: boolean | null;
    adjustment_taxable?: boolean | null;
    gift_card_taxable?: boolean | null;
    shipping_country_code_lock?: string | null;
    coupon_code?: string | null;
    gift_card_code?: string | null;
    cart_url?: string | null;
    return_url?: string | null;
    terms_url?: string | null;
    privacy_url?: string | null;
    market?: MarketRel | null;
    customer?: CustomerRel | null;
    shipping_address?: AddressRel | null;
    billing_address?: AddressRel | null;
    payment_method?: PaymentMethodRel | null;
    payment_source?: AdyenPaymentRel | AxervePaymentRel | BraintreePaymentRel | CheckoutComPaymentRel | ExternalPaymentRel | KlarnaPaymentRel | PaypalPaymentRel | SatispayPaymentRel | StripePaymentRel | WireTransferRel | null;
    tags?: TagRel[] | null;
}
interface OrderUpdate extends ResourceUpdate {
    autorefresh?: boolean | null;
    guest?: boolean | null;
    customer_email?: string | null;
    customer_password?: string | null;
    language_code?: string | null;
    freight_taxable?: boolean | null;
    payment_method_taxable?: boolean | null;
    adjustment_taxable?: boolean | null;
    gift_card_taxable?: boolean | null;
    shipping_country_code_lock?: string | null;
    coupon_code?: string | null;
    gift_card_code?: string | null;
    cart_url?: string | null;
    return_url?: string | null;
    terms_url?: string | null;
    privacy_url?: string | null;
    _archive?: boolean | null;
    _unarchive?: boolean | null;
    _place?: boolean | null;
    _cancel?: boolean | null;
    _approve?: boolean | null;
    _approve_and_capture?: boolean | null;
    _authorize?: boolean | null;
    _authorization_amount_cents?: number | null;
    _capture?: boolean | null;
    _refund?: boolean | null;
    _update_taxes?: boolean | null;
    _nullify_payment_source?: boolean | null;
    _billing_address_clone_id?: string | null;
    _shipping_address_clone_id?: string | null;
    _customer_payment_source_id?: string | null;
    _shipping_address_same_as_billing?: boolean | null;
    _billing_address_same_as_shipping?: boolean | null;
    _commit_invoice?: boolean | null;
    _refund_invoice?: boolean | null;
    _save_payment_source_to_customer_wallet?: boolean | null;
    _save_shipping_address_to_customer_address_book?: boolean | null;
    _save_billing_address_to_customer_address_book?: boolean | null;
    _refresh?: boolean | null;
    _validate?: boolean | null;
    _create_subscriptions?: boolean | null;
    _start_editing?: boolean | null;
    _stop_editing?: boolean | null;
    market?: MarketRel | null;
    customer?: CustomerRel | null;
    shipping_address?: AddressRel | null;
    billing_address?: AddressRel | null;
    payment_method?: PaymentMethodRel | null;
    payment_source?: AdyenPaymentRel | AxervePaymentRel | BraintreePaymentRel | CheckoutComPaymentRel | ExternalPaymentRel | KlarnaPaymentRel | PaypalPaymentRel | SatispayPaymentRel | StripePaymentRel | WireTransferRel | null;
    tags?: TagRel[] | null;
}
declare class Orders extends ApiResource<Order> {
    static readonly TYPE: OrderType;
    create(resource: OrderCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    update(resource: OrderUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    market(orderId: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Market>;
    customer(orderId: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Customer>;
    shipping_address(orderId: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Address>;
    billing_address(orderId: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Address>;
    available_payment_methods(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<PaymentMethod>>;
    available_customer_payment_sources(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<CustomerPaymentSource>>;
    available_free_skus(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Sku>>;
    available_free_bundles(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Bundle>>;
    payment_method(orderId: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<PaymentMethod>;
    line_items(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<LineItem>>;
    line_item_options(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<LineItemOption>>;
    stock_reservations(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockReservation>>;
    stock_line_items(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockLineItem>>;
    stock_transfers(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<StockTransfer>>;
    shipments(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Shipment>>;
    authorizations(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Authorization>>;
    captures(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Capture>>;
    voids(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Void>>;
    refunds(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Refund>>;
    returns(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Return>>;
    order_subscriptions(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<OrderSubscription>>;
    order_factories(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<OrderFactory>>;
    order_copies(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<OrderCopy>>;
    recurring_order_copies(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<RecurringOrderCopy>>;
    attachments(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    events(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    tags(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Tag>>;
    versions(orderId: string | Order, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    _archive(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _unarchive(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _place(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _cancel(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _approve(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _approve_and_capture(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _authorize(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _authorization_amount_cents(id: string | Order, triggerValue: number, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _capture(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _refund(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _update_taxes(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _nullify_payment_source(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _billing_address_clone_id(id: string | Order, triggerValue: string, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _shipping_address_clone_id(id: string | Order, triggerValue: string, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _customer_payment_source_id(id: string | Order, triggerValue: string, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _shipping_address_same_as_billing(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _billing_address_same_as_shipping(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _commit_invoice(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _refund_invoice(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _save_payment_source_to_customer_wallet(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _save_shipping_address_to_customer_address_book(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _save_billing_address_to_customer_address_book(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _refresh(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _validate(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _create_subscriptions(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _start_editing(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    _stop_editing(id: string | Order, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    isOrder(resource: any): resource is Order;
    relationship(id: string | ResourceId | null): OrderRel;
    type(): OrderType;
}
export default Orders;
export type { Order, OrderCreate, OrderUpdate, OrderType };
