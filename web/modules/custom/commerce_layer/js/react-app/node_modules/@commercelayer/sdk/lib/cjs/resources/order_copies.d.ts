import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Order, OrderType } from './orders';
import type { Event } from './events';
import type { OrderSubscription } from './order_subscriptions';
type OrderCopyType = 'order_copies';
type OrderCopyRel = ResourceRel & {
    type: OrderCopyType;
};
type OrderRel = ResourceRel & {
    type: OrderType;
};
interface OrderCopy extends Resource {
    readonly type: OrderCopyType;
    status: 'pending' | 'in_progress' | 'failed' | 'completed';
    started_at?: string | null;
    completed_at?: string | null;
    failed_at?: string | null;
    errors_log?: Record<string, any> | null;
    errors_count?: number | null;
    place_target_order?: boolean | null;
    reuse_wallet?: boolean | null;
    cancel_source_order?: boolean | null;
    source_order?: Order | null;
    target_order?: Order | null;
    events?: Event[] | null;
    order_subscription?: OrderSubscription | null;
}
interface OrderCopyCreate extends ResourceCreate {
    place_target_order?: boolean | null;
    reuse_wallet?: boolean | null;
    cancel_source_order?: boolean | null;
    source_order: OrderRel;
}
type OrderCopyUpdate = ResourceUpdate;
declare class OrderCopies extends ApiResource<OrderCopy> {
    static readonly TYPE: OrderCopyType;
    create(resource: OrderCopyCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<OrderCopy>;
    update(resource: OrderCopyUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<OrderCopy>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    source_order(orderCopyId: string | OrderCopy, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    target_order(orderCopyId: string | OrderCopy, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<Order>;
    events(orderCopyId: string | OrderCopy, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Event>>;
    order_subscription(orderCopyId: string | OrderCopy, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<OrderSubscription>;
    isOrderCopy(resource: any): resource is OrderCopy;
    relationship(id: string | ResourceId | null): OrderCopyRel;
    type(): OrderCopyType;
}
export default OrderCopies;
export type { OrderCopy, OrderCopyCreate, OrderCopyUpdate, OrderCopyType };
