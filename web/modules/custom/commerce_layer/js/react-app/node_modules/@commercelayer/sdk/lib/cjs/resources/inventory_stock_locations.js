"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class InventoryStockLocations extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: InventoryStockLocations.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: InventoryStockLocations.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: InventoryStockLocations.TYPE } : id, options);
    }
    async stock_location(inventoryStockLocationId, params, options) {
        const _inventoryStockLocationId = inventoryStockLocationId.id || inventoryStockLocationId;
        return this.resources.fetch({ type: 'stock_locations' }, `inventory_stock_locations/${_inventoryStockLocationId}/stock_location`, params, options);
    }
    async inventory_model(inventoryStockLocationId, params, options) {
        const _inventoryStockLocationId = inventoryStockLocationId.id || inventoryStockLocationId;
        return this.resources.fetch({ type: 'inventory_models' }, `inventory_stock_locations/${_inventoryStockLocationId}/inventory_model`, params, options);
    }
    async versions(inventoryStockLocationId, params, options) {
        const _inventoryStockLocationId = inventoryStockLocationId.id || inventoryStockLocationId;
        return this.resources.fetch({ type: 'versions' }, `inventory_stock_locations/${_inventoryStockLocationId}/versions`, params, options);
    }
    isInventoryStockLocation(resource) {
        return resource.type && (resource.type === InventoryStockLocations.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: InventoryStockLocations.TYPE } : { id: id.id, type: InventoryStockLocations.TYPE };
    }
    type() {
        return InventoryStockLocations.TYPE;
    }
}
InventoryStockLocations.TYPE = 'inventory_stock_locations';
exports.default = InventoryStockLocations;
