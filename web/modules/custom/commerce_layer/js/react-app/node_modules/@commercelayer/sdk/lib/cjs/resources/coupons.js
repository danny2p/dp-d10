"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class Coupons extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: Coupons.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: Coupons.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: Coupons.TYPE } : id, options);
    }
    async promotion_rule(couponId, params, options) {
        const _couponId = couponId.id || couponId;
        return this.resources.fetch({ type: 'coupon_codes_promotion_rules' }, `coupons/${_couponId}/promotion_rule`, params, options);
    }
    async coupon_recipient(couponId, params, options) {
        const _couponId = couponId.id || couponId;
        return this.resources.fetch({ type: 'coupon_recipients' }, `coupons/${_couponId}/coupon_recipient`, params, options);
    }
    async events(couponId, params, options) {
        const _couponId = couponId.id || couponId;
        return this.resources.fetch({ type: 'events' }, `coupons/${_couponId}/events`, params, options);
    }
    async tags(couponId, params, options) {
        const _couponId = couponId.id || couponId;
        return this.resources.fetch({ type: 'tags' }, `coupons/${_couponId}/tags`, params, options);
    }
    async versions(couponId, params, options) {
        const _couponId = couponId.id || couponId;
        return this.resources.fetch({ type: 'versions' }, `coupons/${_couponId}/versions`, params, options);
    }
    isCoupon(resource) {
        return resource.type && (resource.type === Coupons.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: Coupons.TYPE } : { id: id.id, type: Coupons.TYPE };
    }
    type() {
        return Coupons.TYPE;
    }
}
Coupons.TYPE = 'coupons';
exports.default = Coupons;
