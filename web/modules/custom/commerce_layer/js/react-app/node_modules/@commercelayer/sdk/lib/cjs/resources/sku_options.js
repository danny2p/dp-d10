"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resource_1 = require("../resource");
class SkuOptions extends resource_1.ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: SkuOptions.TYPE }, params, options);
    }
    async update(resource, params, options) {
        return this.resources.update({ ...resource, type: SkuOptions.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: SkuOptions.TYPE } : id, options);
    }
    async market(skuOptionId, params, options) {
        const _skuOptionId = skuOptionId.id || skuOptionId;
        return this.resources.fetch({ type: 'markets' }, `sku_options/${_skuOptionId}/market`, params, options);
    }
    async attachments(skuOptionId, params, options) {
        const _skuOptionId = skuOptionId.id || skuOptionId;
        return this.resources.fetch({ type: 'attachments' }, `sku_options/${_skuOptionId}/attachments`, params, options);
    }
    async events(skuOptionId, params, options) {
        const _skuOptionId = skuOptionId.id || skuOptionId;
        return this.resources.fetch({ type: 'events' }, `sku_options/${_skuOptionId}/events`, params, options);
    }
    async tags(skuOptionId, params, options) {
        const _skuOptionId = skuOptionId.id || skuOptionId;
        return this.resources.fetch({ type: 'tags' }, `sku_options/${_skuOptionId}/tags`, params, options);
    }
    async versions(skuOptionId, params, options) {
        const _skuOptionId = skuOptionId.id || skuOptionId;
        return this.resources.fetch({ type: 'versions' }, `sku_options/${_skuOptionId}/versions`, params, options);
    }
    isSkuOption(resource) {
        return resource.type && (resource.type === SkuOptions.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: SkuOptions.TYPE } : { id: id.id, type: SkuOptions.TYPE };
    }
    type() {
        return SkuOptions.TYPE;
    }
}
SkuOptions.TYPE = 'sku_options';
exports.default = SkuOptions;
