import { ApiResource } from '../resource';
import type { Resource, ResourceCreate, ResourceUpdate, ResourceId, ResourcesConfig, ResourceRel, ListResponse } from '../resource';
import type { QueryParamsRetrieve, QueryParamsList } from '../query';
import type { Market } from './markets';
import type { Attachment } from './attachments';
import type { Version } from './versions';
import type { TaxCategory, TaxCategoryType } from './tax_categories';
type AvalaraAccountType = 'avalara_accounts';
type AvalaraAccountRel = ResourceRel & {
    type: AvalaraAccountType;
};
type TaxCategoryRel = ResourceRel & {
    type: TaxCategoryType;
};
interface AvalaraAccount extends Resource {
    readonly type: AvalaraAccountType;
    name: string;
    username: string;
    company_code: string;
    commit_invoice?: string | null;
    ddp?: string | null;
    markets?: Market[] | null;
    attachments?: Attachment[] | null;
    versions?: Version[] | null;
    tax_categories?: TaxCategory[] | null;
}
interface AvalaraAccountCreate extends ResourceCreate {
    name: string;
    username: string;
    password: string;
    company_code: string;
    commit_invoice?: string | null;
    ddp?: string | null;
    tax_categories?: TaxCategoryRel[] | null;
}
interface AvalaraAccountUpdate extends ResourceUpdate {
    name?: string | null;
    username?: string | null;
    password?: string | null;
    company_code?: string | null;
    commit_invoice?: string | null;
    ddp?: string | null;
    tax_categories?: TaxCategoryRel[] | null;
}
declare class AvalaraAccounts extends ApiResource<AvalaraAccount> {
    static readonly TYPE: AvalaraAccountType;
    create(resource: AvalaraAccountCreate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AvalaraAccount>;
    update(resource: AvalaraAccountUpdate, params?: QueryParamsRetrieve, options?: ResourcesConfig): Promise<AvalaraAccount>;
    delete(id: string | ResourceId, options?: ResourcesConfig): Promise<void>;
    markets(avalaraAccountId: string | AvalaraAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Market>>;
    attachments(avalaraAccountId: string | AvalaraAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Attachment>>;
    versions(avalaraAccountId: string | AvalaraAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<Version>>;
    tax_categories(avalaraAccountId: string | AvalaraAccount, params?: QueryParamsList, options?: ResourcesConfig): Promise<ListResponse<TaxCategory>>;
    isAvalaraAccount(resource: any): resource is AvalaraAccount;
    relationship(id: string | ResourceId | null): AvalaraAccountRel;
    type(): AvalaraAccountType;
}
export default AvalaraAccounts;
export type { AvalaraAccount, AvalaraAccountCreate, AvalaraAccountUpdate, AvalaraAccountType };
