import { ApiResource } from '../resource';
class Exports extends ApiResource {
    async create(resource, params, options) {
        return this.resources.create({ ...resource, type: Exports.TYPE }, params, options);
    }
    async delete(id, options) {
        await this.resources.delete((typeof id === 'string') ? { id, type: Exports.TYPE } : id, options);
    }
    async events(exportId, params, options) {
        const _exportId = exportId.id || exportId;
        return this.resources.fetch({ type: 'events' }, `exports/${_exportId}/events`, params, options);
    }
    isExport(resource) {
        return resource.type && (resource.type === Exports.TYPE);
    }
    relationship(id) {
        return ((id === null) || (typeof id === 'string')) ? { id, type: Exports.TYPE } : { id: id.id, type: Exports.TYPE };
    }
    type() {
        return Exports.TYPE;
    }
}
Exports.TYPE = 'exports';
export default Exports;
